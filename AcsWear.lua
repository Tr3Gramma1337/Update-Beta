script_name("AcsWear")
script_author("Luffich (Original Chapo)")
script_version(1.7)

if not package.loaded["imgui"] then
    local status, err = pcall(require, "imgui")
    if not status then
        print("Îøèáêà çàãðóçêè imgui: " .. tostring(err))
        thisScript():unload()
        return
    end
end

imgui = require("imgui")

local m_tag = "{00deff}" .. thisScript().name .. " (v." .. thisScript().version .. "): {ffffff}"
local dlstatus = require("moonloader").download_status
local memory = require "memory"
local encoding = require "encoding"
encoding.default = "CP1251"
u8 = encoding.UTF8
local sampev = require "lib.samp.events"
local inicfg = require "inicfg"

local USERNAME_GH = "Tr3Gramma1337"
local REPOSITORY_GH = "Acs"
local updateCheck = false
local updateAvailable = false
local latestVersion = ""
local updateUrl = ""
local checkInProgress = false
local forceUpdateCheck = false

function compareVersions(v1, v2)
    local parts1 = {}
    for part in v1:gmatch("%d+") do
        table.insert(parts1, tonumber(part))
    end

    local parts2 = {}
    for part in v2:gmatch("%d+") do
        table.insert(parts2, tonumber(part))
    end

    for i = 1, math.max(#parts1, #parts2) do
        local p1 = parts1[i] or 0
        local p2 = parts2[i] or 0
        if p1 > p2 then
            return 1
        end
        if p1 < p2 then
            return -1
        end
    end
    return 0
end

function checkForUpdates(force)
    if checkInProgress and not force then
        return
    end
    checkInProgress = true

    if force then
        updateCheck = false
        updateAvailable = false
        latestVersion = ""
        updateUrl = ""
    end

    local versionUrl =
        string.format(
        --"https://github.com/Tr3Gramma1337/Acs"
        "https://raw.githubusercontent.com/%s/%s/main/version.json?t=%s",
        USERNAME_GH,
        REPOSITORY_GH,
        os.time()
    )

    downloadUrlToFile(
        versionUrl,
        getWorkingDirectory() .. "\\version_temp.json",
        function(id, status, p1, p2)
            if status == dlstatus.STATUSEX_ENDDOWNLOAD then
                local f = io.open(getWorkingDirectory() .. "\\version_temp.json", "r")
                if f then
                    local content = f:read("*a")
                    f:close()
                    os.remove(getWorkingDirectory() .. "\\version_temp.json")

                    local success, data = pcall(decodeJson, content)
                    if success and data then
                        latestVersion = data.latest or ""
                        updateUrl = data.updateurl or ""

                        if latestVersion ~= "" then
                            local current = tostring(thisScript().version)
                            local comparison = compareVersions(current, latestVersion)

                            if comparison == -1 then
                                updateAvailable = true
                                sampAddChatMessage(
                                    "{00deff}[AcsWear] {FFFFFF}sd{00deff}" ..
                                        current ..
                                            " > " ..
                                                latestVersion ..
                                                    "! {FFFFFF} Íàæìèòå {00deff}Îáíîâèòü ñåé÷àñ {FFFFFF} â ìåíþ.",
                                    -1
                                )
                            elseif comparison == 1 then
                                updateAvailable = true
                                sampAddChatMessage(
                                    "{00deff}[AcsWear] {FFFFFF}Äîñòóïíà âåðñèÿ {00deff}" ..
                                        latestVersion ..
                                            " {FFFFFF} (îòêàò). Íàæìèòå {00deff}Îáíîâèòü ñåé÷àñ {FFFFFF} åñëè íóæíî.",
                                    -1
                                )
                            else
                                updateAvailable = false
                                sampAddChatMessage(
                                    "{00deff}[AcsWear] {FFFFFF}Ó âàñ àêòóàëüíàÿ âåðñèÿ {00deff}" .. current,
                                    -1
                                )
                            end
                        end
                    end
                end
                updateCheck = true
                checkInProgress = false
            else
                checkInProgress = false
            end
        end
    )
end

function performUpdate()
    if updateUrl == "" then
        return
    end

    downloadUrlToFile(
        updateUrl,
        thisScript().path,
        function(id, status, p1, p2)
            if status == dlstatus.STATUSEX_ENDDOWNLOAD then
                sampAddChatMessage(
                    "{00deff}[AcsWear] {FFFFFF}Îáíîâëåíèå óñïåøíî çàãðóæåíî! {00deff} Ïåðåçàãðóæàåì...",
                    -1
                )
                thisScript():reload()
            elseif status == dlstatus.STATUSEX_ERROR then
                sampAddChatMessage("{00deff}[AcsWear] {FFFFFF}Îøèáêà ïðè çàãðóçêå {00deff} îáíîâëåíèÿ", -1)
            end
        end
    )
end

local directIni = "AcsWear.ini"
local ini =
    inicfg.load(
    inicfg.load(
        {
            slots = {
                enabled = true,
                s1 = 1,
                s2 = 1,
                s3 = 1,
                s4 = 1,
                s5 = 1,
                s6 = 1,
                s7 = 1,
                armour = 0,
                glow = false
            },
            colors = {
                s1 = 1,
                s2 = 1,
                s3 = 1,
                s4 = 1,
                s5 = 1,
                s6 = 1,
                s7 = 1,
                armour = 1
            },
            skin = {
                enabled = false,
                skinid = 13735
            },
            other = {
                ya_blatnoy = false,
                walkstyle_enabled = false,
                fightstyle = 0,
                walkstyle = 0,
                rollerfix = true,
                normalturnfix = true,
                debugMode = false
            },
            presets = {
                p1 = "",
                p2 = "",
                p3 = "",
            }
        },
        directIni
    )
)
inicfg.save(ini, directIni)

local savedPresets = {ini.presets.p1, ini.presets.p2, ini.presets.p3, ini.presets.p4, ini.presets.p5}
local search = imgui.ImBuffer(256)
local popular_skins_search = imgui.ImBuffer(256)
local window = imgui.ImBool(false)

local menu_selected = imgui.ImInt(1)
local selector_pos = imgui.ImInt(0)

local selector_list = {
    u8 "Ñëîò 1 (Ãîëîâà)",
    u8 "Ñëîò 2 (Ëèöî)",
    u8 "Ñëîò 3 (Ðóêà)",
    u8 "Ñëîò 4 (Ãðóäü)",
    u8 "Ñëîò 5 (Ïëå÷î)",
    u8 "Ñëîò 6 (Ñïèíà)",
    u8 "Äîïîëíèòåëüíî",
    u8 "Íàñòðîéêè ñêðèïòà"
}

local enabled = imgui.ImBool(ini.slots.enabled)

local logger = imgui.ImBool(true)
local logger_playerId = imgui.ImInt(0)
local show_popular_skins = imgui.ImBool(false)

local logger_slot0 = imgui.ImBuffer(256)
local logger_slot1 = imgui.ImBuffer(256)
local logger_slot2 = imgui.ImBuffer(256)
local logger_slot3 = imgui.ImBuffer(256)
local logger_slot4 = imgui.ImBuffer(256)
local logger_slot5 = imgui.ImBuffer(256)

local loadpresetbycodeinpopup = imgui.ImBuffer(256)
local ya_blatnoy = ini.other.ya_blatnoy

local color_transparent = 16777215
local items_data = {}
local default_items_data = {
    --slot 1 (íèìá)
    {
        {u8'Íèìá ñ àíèìàöèåé', 19197, 2, 0.29899701476097, 0.0020000000949949, -0.0040000001899898, 0, 87.900032043457, 0, 0.40999999642372, 0.41800001263618, 0, false, false},
		{u8'Ðàçäåëèòåëüíàÿ øëÿïà', 10385, 2, 0.300987, 0.017999, 0.009998, 0.000000, 0.000000, 7.699995, 1.000000, 1.057000, 1.045001, false, false},
		{u8'Íèìá èç òàíãî', 5181, 2, 0.29699900746346, 0, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Íèìá Ïàéìîí', 9765, 2, 0.34900999069214, 0.01999899931252, 0.0049990001134574, -92.100128173828, -1.6000000238419, -179.50001525879, 1, 1, 1, false, false},
		{u8'Íèìá Òåðíîâûé âåíåö', 2453, 2, 0.31399899721146, -0.0039989999495447, 0.0059989998117089, -2.9999969005585, 89.500099182129, 0, 1, 1, 1, false, false},
		{u8'Ëåäÿíàÿ êîðîíà', 10388, 2, 0.36599600315094, 0.050999000668526, 0.0019990000873804, -89, 0, 179.59963989258, 1, 1, 1, false, false},
		{u8'Íèìá êîëüöà âñåâëàñòèÿ', 4745, 2, 0.38199898600578, 0, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Àñòðàëüíàÿ ñôåðà', 9863, 1, 0.93299722671509, 0.044998001307249, -0.00099900003988296, 22.899997711182, -92.400169372559, 0, 1, 1, 1, false, false},
		{u8'Íèìá 5 çâåçä', 17084, 2, 0.36199998855591, 0, 0, 0, 174.4001159668, 0, 1, 1, 1, false, false},
		{u8'Ëåâàÿ ðóêà ìîíñòðà èç äóìà', 9855, 5, -0.043000001460314, -0.0089990003034472, 0.003000000026077, -135.69866943359, 1.2998290061951, 0.99938201904297, 0.92599499225616, 1.4580030441284, 1.6040029525757, false, false},
		{u8'Ìàðêåð êëóáà', 5909, 2, 0.28799998760223, 0, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Êóá ïðîñòðàíñòâà', 6374, 2, 0.48899900913239, 0, 0.017000000923872, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Íèìá èç êîëåö Ñîíèêà', 4727, 2, 0.26099899411201, 0, 0.0070000002160668, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Íèìá Öèòðèîí', 2261, 2, 0.094999000430107, -0.15700000524521, -0.013000000268221, 82.900016784668, 173.60006713867, 0, 1, 1, 1, false, false},
		{u8'Íåîíîâûé òîðòèê - øëÿïà', 6123, 2, 0.32699900866, 0, 0, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Çîëîòàÿ êîðîíà', 2452, 2, 0.336998999119, 0.014000000432, 0.014999999665, -1.59999299049, 89.500099182, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Êðèñòàëë ñèìà', 2449, 2, 0.450998991728, -0.014000000432, 0.042998999357, 178.500091553, 98.199935913, -12.399996758, 1.0, 1.0, 1.0, false, false},
		{u8'Íèìá èç Ïîêåáîëëîâ', 4708, 2, 0.286998987198, 0.013000000268, 0, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Íèìá Ïîí÷èêè', 2262, 2, 0.300998985767, -0.006000000052, -0.00400000019, 82.900016785, -10.199773788, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Ïàñõàëüíûé íèìá', 18335, 2, 0.31699898839, 0.0109989997, -0.00099900004, 0, 0, 0, 0.943000018597, 1.0, 0.861999988556, false, false},
		{u8'Ìàðêåð Dead Inside', 5013, 2 , 0.4289990067482, 0, 0, 0, 0, 0, 0.8, 0.8, 0.8, false, false},
		{u8'Íèìá èç òîðòèêîâ', 5961, 2, 0.27599900960922, -0.0060000000521541, -0.0040000001899898, 82.900016784668, -10.199771881104, 1, 1, 1, 1, false, false},
		{u8'Çìåèíûé íèìá', 5468, 2, 0.27599900960922, 0, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Êîëþ÷èé íèìá', 5599, 1, 0.47999900579453, -0.1499989926815, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Íèìá òûêâû', 5840, 2, 0.29999899864197, 0, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Íèìá Àêàöóêè', 17166, 2, 0.29699900746346, 0, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Ìàãè÷åñêèé âîçäóøûé øàð 1', 13712, 1, 0.37499800920486, -0.017000000923872, 0.30699801445007, 0, 86, 0, 0.0089990003034472, 0.0089990003034472, 0.0089990003034472, false, false},
		{u8'Íèìá ñóøè', 17168, 2, 0.29699900746346, 0, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Íèìá Êîðîíà', 17968, 2, 0.29699900746346, 0, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Êîñòÿíîé õâîñò', 9673, 1, 0.12999899685383, 0.003000000026077, -0.01799900084734, 0, 88.799835205078, 0, 1, 1, 1, false, false},
		{u8'Êóáî Ìîöèè', 18315, 2, 0.29699900746346, 0, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Íèìá Ëóôôè÷à', 4746, 2, 0.186999, 0.010000, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Ìàãè÷åñêèå ñôåðû', 9864, 1, -0.064999997615814, 0, 0, 0, -90.700057983398, 2.9999990463257, 1, 1, 1, false, false},
		{u8'Íèìá Geometry Dash', 4728, 2, 0.29699900746346, 0, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Íèìá Ïîøëîé Ìîëëè', 14824, 2, 0.40899887681007, 0.06199899315834, 0.0099980030208826, 0, 0, 0, 0.92199897766113, 0.94900000095367, 0.80400002002716, false, false},
		{u8'Íèìá Äîðû', 14741, 2, 0.16899897158146, 0.06199899315834, 0.0099980030208826, 0, 0, 0, 0.92199897766113, 0.94900000095367, 0.80400002002716, false, false},
		{u8"Íîâîãîäíèé íèìá", 3395, 2, 0.27599900960922, -0.0060000000521541, -0.0040000001899898, 82.900016784668, -10.199771881104, 1, 1, 1, 1, false, false},
    },

    --slot 2 (ëèöî)
    {
        {u8'Øàïêà Îëåíÿ', 3384, 2, 0.15099500119686, 0.030998000875115, 0.0020010001026094, 2.5999970436096, -1.5999970436096, 0, 0.85199701786041, 0.88699901103973, 0.85499900579453, false, false},
		{u8'Àíèìèðîâàííàÿ Ìàñêà Òûêâû', 9862, 2, -0.0099980002269149, -0.09799599647522, 0.00099800003226846, -174.3999786377, 5.9999952316284, 0, 0.50499802827835, 0.50000202655792, 0.52200102806091, false, false},
        {u8'Ìàñêà Äæåêà', 9746, 2, 0.14299400150776, 0.0029990000184625, 0.0079960003495216, -2.0999970436096, -0.5, 179.00004577637, 1.0979950428009, 1.0160000324249, 0.99800002574921, false, false},
		{u8'Øëåì êîðîëÿ Ëè÷à', 9974, 2, -0.01199600007385, 0.15399900078773, -1.9999999949505e-06, 0.59999597072601, -2.8999989032745, -8.8000040054321, 1.0530029535294, 1.0690220594406, 1.0660170316696, false, false},
		{u8'Ãîëîâà ìîíñòðà èç äóìà', 9853, 2, 0.10599704086781, 0.016001004725695, 0.0039980001747608, -0.5999950170517, -6.2000050544739, -5.3001317977905, 1.0430200099945, 1.1020469665527, 1.2120430469513, false, false},
		{u8'Ìàñêà êëîóíà', 9745, 2, 0.10099600255489, 0.0060020000673831, 0.0010010000551119, 0, -3.5999970436096, 176.6001739502, 0.92799597978592, 0.97499698400497, 1.1870009899139, false, false},
		{u8'Ìàñêà òûêâà', 9744, 2, 0.14299499988556, 0.0029990000184625, 0.0079979998990893, -2.0999970436096, -0.5, 179.00004577637, 1.0979969501495, 1.0160000324249, 0.99800199270248, false, false},
		{u8'Øëåì ÷åðåï ñ êîðîíîé', 4628, 2, 0.13799899816513, 0.1410000026226, 0, 0, 0, 2.4000000953674, 1, 1.057000041008, 1.0360000133514, false, false},
		{u8'Ðîæêè íà ãîëîâó 8', 8468, 2, 0.19299499690533, -0.056997001171112, -0.0070020002312958, 99.10001373291, 70.599960327148, -91.10001373291, 1, 1, 1, false, false},
		{u8'Ðîæêè íà ãîëîâó 7', 8187, 2, 0.19299499690533, -0.056997001171112, -0.0070020002312958, 99.10001373291, 70.599960327148, -91.10001373291, 1, 1, 1, false, false},
		{u8'Ðîæêè íà ãîëîâó 6', 8194, 2, 0.192994996905, -0.056997001171, -0.007002000231, 99.100013733, 70.599960327, -91.100013733, 1.0, 1.0, 1.0, false, false},
		{u8'Ðîæêè íà ãîëîâó 5', 8201, 2, 0.19299499690533, -0.056997001171112, -0.0070020002312958, 99.10001373291, 70.599960327148, -91.10001373291, 1, 1, 1, false, false},
		{u8'Ðîæêè íà ãîëîâó 4', 8451, 2, 0.19299499690533, -0.056997001171112, -0.0070020002312958, 99.10001373291, 70.599960327148, -91.10001373291, 1, 1, 1, false, false},
		{u8'Ðîæêè íà ãîëîâó 3', 8452, 2, 0.19299499690533, -0.056997001171112, -0.0070020002312958, 99.10001373291, 70.599960327148, -91.10001373291, 1, 1, 1, false, false},
		{u8'Ðîæêè íà ãîëîâó 2', 8175, 2, 0.19299499690533, -0.056997001171112, -0.0070020002312958, 99.10001373291, 70.599960327148, -91.10001373291, 1, 1, 1, false, false},
		{u8'Ðîæêè íà ãîëîâó', 8169, 2, 0.19299499690533, -0.056997001171112, -0.0070020002312958, 99.10001373291, 70.599960327148, -91.10001373291, 1, 1, 1, false, false},
		{u8'Äåìîíè÷ñêèå Ðîãà', 2384, 2, 0.21899899840355, 0.021998999640346, 0.049998000264168, 6.8999981880188, -2.9999990463257, -4.4999990463257, 0.92199897766113, 0.94900000095367, 0.80400002002716, false, false},
		{u8'Äåìîíè÷åñêèå Ðîãà', 9845, 2, 0.14900000393391, 0.051999002695084, 0.0099980030208826, 0, 0, 268, 0.92199897766113, 0.96899998188019, 0.9339998960495, false, false},
		{u8'Î÷êè àäìèíà 3 lvl', 10536, 2, 0.080995999276638, 0.072999998927116, 0.0019980000797659, 1.6999850273132, -3.0999970436096, -0.60001200437546, 1.1590000391006, 1.4019999504089, 1.1280000209808, false, false},
        {u8'Î÷êè àäìèíà 1 lvl', 10534, 2, 0.080995999276638, 0.072999998927116, 0.0019980000797659, 1.6999850273132, -3.0999970436096, -0.60001200437546, 1.1590000391006, 1.4019999504089, 1.1280000209808, false, false},
        {u8'Î÷êè àäìèíà 2 lvl', 10535, 2, 0.080995999276638, 0.072999998927116, 0.0019980000797659, 1.6999850273132, -3.0999970436096, -0.60001200437546, 1.1590000391006, 1.4019999504089, 1.1280000209808, false, false},
        {u8'Î÷êè àäìèíà 4 lvl', 10537, 2, 0.080995999276638, 0.072999998927116, 0.0019980000797659, 1.6999850273132, -3.0999970436096, -0.60001200437546, 1.1590000391006, 1.4019999504089, 1.1280000209808, false, false},
        {u8'Î÷êè àäìèíà 5 lvl', 10538, 2, 0.080995999276638, 0.072999998927116, 0.0019980000797659, 1.6999850273132, -3.0999970436096, -0.60001200437546, 1.1590000391006, 1.4019999504089, 1.1280000209808, false, false},
        {u8'Î÷êè àäìèíà 6 lvl', 10539, 2, 0.080995999276638, 0.072999998927116, 0.0019980000797659, 1.6999850273132, -3.0999970436096, -0.60001200437546, 1.1590000391006, 1.4019999504089, 1.1280000209808, false, false},
        {u8'Î÷êè àäìèíà 7 lvl', 10540, 2, 0.080995999276638, 0.072999998927116, 0.0019980000797659, 1.6999850273132, -3.0999970436096, -0.60001200437546, 1.1590000391006, 1.4019999504089, 1.1280000209808, false, false},
        {u8'Apple Vision', 5002, 2, 0.11800000071526, 0.039, 0, 0, 0, 0, 1, 1, 1, false, false},
        {u8'×åðåï äüÿâîëà â êàïþøîíå', 9849, 2, 0.10999999940395, 0, -0.0039980001747608, 3.5000059604645, -1.900004029274, -6.199903011322, 1.3469799757004, 1.2449860572815, 1.1589909791946, false, false},
        {u8'Òàêòè÷åñêèé øëåì', 6065, 2, 0.10299900174141, 0.013999000191689, 0.0019990000873804, 0.299995422363, 0.200103759766, 0, 1.1790020465851, 1.1350150108337, 1.1570030450821, false, false},
        {u8'Íîâîãîäíèå îëåíüè ðîãà', 10381, 2, 0.15999700129032, 0.041997000575066, 0.003000000026077, -3.0999970436096, -6.8000011444092, -3.8999960422516, 1, 1, 1, false, false},
		{u8'Ðîãà', 18485, 2, 0.19099999964237, 0, 0, 0, 89.700103759766, 0, 1, 1, 1, false, false},
		{u8'Ìàñêà ÷ó÷åëà èç Õîäÿ÷èé çàìêà', 2218, 2, 0.094997003674507, 0.028999000787735, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Óøêè ëåòó÷åé ìûøè', 2809, 2, 0.19299900531769, 0.030998999252915, 0.003000000026077, 1.7999980449677, 0, 0, 1.0239989757538, 1, 1.0109980106354, false, false},
		{u8'Øëåì òûêâà', 2798, 2, 0.056000001728535, 0.038998998701572, 0.0080009996891022, 0, -5.899995803833, 0, 1.0390000343323, 1, 1.0449990034103, false, false},
		{u8'Ãîëîâíîé óáîð ïòèöà', 2353, 2, 0.044998999685049, 0.041999001055956, -0.0089999996125698, 0.89999997615814, -0.59999799728394, 0, 1, 0.95199900865555, 1.0180000066757, false, false},
		{u8'Ñòðàøíàÿ òûêâà íà ãîëîâó', 2808, 2, 0.079998001456261, 0.030998000875115, -0.0019990000873804, 1.7999980449677, 0, 0, 1, 1.0740000009537, 1.0770000219345, false, false},
		{u8'Øëåì áåíçîïèëà', 2125, 2, 0.17599900066853, 0.13999900221825, -0.0019990000873804, 0, 0, 0, 1.0219999551773, 1, 1.1460050344467, false, false},
		{u8'Ìàñêà ìîòî-ãîëîâîðåçà 2', 15632, 2, 0.10399799793959, 0.11800000071526, -0.0059980000369251, 0, 0, -1.8000030517578, 1, 1, 1, false, false},
		{u8'Øëåì êîñìîíàâòà', 2469, 2, 0.025998000055552, 0.064000003039837, -0.0049990001134574, -2.9999959468842, -1.6998510360718, 0, 1, 1, 1, false, false},
		{u8'Øëåì Daft Punk', 2394, 2, -0.032000001519918, 0.025000000372529, 0.003000000026077, 0, 0, 0, 1.0639990568161, 1.0199999809265, 0.9549999833107, false, false},
		{u8'ÕýäÊðàá', 2396, 2, 0.032000001519918, 0.06699900329113, 0.0070000002160668, 0, 0, -13.600012779236, 1, 1, 1, false, false},
		{u8'Äèàäåìà ñîëíöà', 2420, 2, 0.22099900245667, 0.025000000372529, 0.0080000003799796, 0, 175.00012207031, 0, 1.0080000162125, 1, 1.0119999647141, false, false},
		{u8'Øëåì ïîæàðíèêà', 2470, 2, 0.14299899339676, 0.0070009999908507, 0.0020000000949949, -2.9999959468842, 1.400151014328, 0, 1, 1, 1, false, false},
		{u8'Äèàäåìà ñ áàáî÷êàìè', 2422, 2, 0.22099900245667, 0.025000000372529, 0.0080000003799796, 0, 175.00012207031, 0, 1.0080000162125, 1, 1.0119999647141, false, false},
		{u8'Çîëîòàÿ äèàäåìà', 2421, 2, 0.22099900245667, 0.025000000372529, 0.0080000003799796, 0, 175.00012207031, 0, 1.0080000162125, 1, 1.0119999647141, false, false},
		{u8'Øëåì SW', 10772, 2, 0.10299900174141, 0.01799999922514, 0.0060000000521541, 0, 0, 0, 1.1450010538101, 1.1540050506592, 1.2450040578842, false, false},
		{u8'Øëÿïà Øëÿïíèêà', 2413, 2, 0.29099899530411, -0.020998999476433, 0.003000000026077, 179.20008850098, 0, 8.6999950408936, 1.052001953125, 1.0640020370483, 1.0840009450912, false, false},
		{u8'¨ëî÷íûé îáîäîê', 3518, 2, 0.21399900317192, 0.023998999968171, -0.00099900003988296, 2.0000009536743, 0.20000000298023, 0.3999969959259, 0.90300101041794, 1.0109980106354, 0.87399899959564, false, false},
		{u8'Øëåì êèáåðïàíê', 10357, 2, 0.10099899768829, 0.010999999940395, 0.00099900003988296, -4.9999971389771, -7.099995136261, -5.7999992370605, 0.89299702644348, 1.0740070343018, 1.1410130262375, false, false},
		{u8'Ìàñêà ÷åðåï äíÿ ìåðòâûõ', 2797, 2, 0.15000000596046, 0.16699799895287, 0.0039980001747608, 0, 0, 0, 1.0119990110397, 1, 1.0430070161819, false, false},
		{u8'Øëåì êèáåðïàíê 2', 10368, 2, 0.086998999118805, 0.026000000536442, 0.0019990000873804, 3.1000039577484, -1.7999999523163, 0, 1.08800303936, 1.1010030508041, 1.186007976532, false, false},
		{u8'Øëåì çåëåíîãî ãîáëèíà', 2794, 2, 0.087998002767563, 0.096998997032642, -0.0029990000184625, 0, 0, -12.000002861023, 1.1789979934692, 1.1699949502945, 1.2429980039597, false, false},
		{u8'Ïàñõàëüíûå íàóøíèêè', 4684, 2, 0.13799899816513, 0.014999000355601, 0, 0, 0, 0, 0.90399897098541, 1, 1, false, false},
		{u8'Ìàñêà àíãåëà', 2803, 2, 0.16299800253, 0.15899899602, 0.012999000028, 0, -5.1000499725, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Óøêè êðîëèêà', 4939, 2, 0.32100000978, 0.02699900046, -0.006000000052, 0.89999997616, -0.59999799728, 0, 1.0, 0.95199900866, 1.01800000668, false, false},
		{u8'Òîïîð â ãîëîâå', 2796, 2, 0.21999999881, 0.0369989983737, 0.088999003172, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Øëåì ÷åëîâåêà-ìóðîâüÿ', 2200, 2, 0.084997996688, 0.044998999685, 0, -2.29999899864, 0, 0, 1.10300004482, 1.09600102901, 1.0709990263, false, false},
		{u8'Î÷êè êèáåðïàíê', 10355, 2, 0.10099799931, 0.0939989984035, 0.0049990001135, 4.80000400543, 1.10001504421, -12.0999965668, 0.79699701071, 0.89799898863, 0.93899101019, false, false},
		{u8'Øëåì Øèíîáè', 10525, 2, 0.065999001265, 0.017999999225, -0.000000001, -1.89999902248, -5.09999990463, -0.49999800324, 1.0, 1.16600203514, 0.97799801826, false, false},
		{u8'Î÷êè ñåðäöà', 2277, 2, 0.087999999523, 0.062997996807, 0.0019990000874, 1.10000002384, 0, 0.099990002811, 1.0, 1.0, 0.96899902821, false, false},
		{u8'Àðáóçíûé øëåì', 2475, 2, 0.12099900097, 0.009998999536, -0.00099900004, 0, 0, 0, 1.07100105286, 1.06500005722, 1.10900199413, false, false},
		{u8'Î÷êè ëåòó÷àÿ ìûøü', 9909, 2, 0.11399900168, 0.046999000013, 0.0040009999648, 2.3999979496, 0, 0.6999989748, 1.03900003433, 1.0, 1.03399705887, false, false},
		{u8'Óøêè ñ áàíòèêàìè', 5887, 2, 0.21799999475, 0.031998999417, 0.002000000095, 0, 88.999938965, 3.100071907, 0.96899998188, 1.0, 1.0, false, false},
		{u8'Øëÿïà Êîòà â ñàïîãàõ', 3251, 2, 0.20999899507, -0.18999800086, -0.039000000805, 3.0, 0, -3.5999979973, 0.97600102425, 1.44000005722, 1.14999997616, false, false},
		{u8'Ìàñêà õèùíèêà', 2398, 2, 0.21399700642, 0.072996996343, 0.0089999996126, 0, -3.9999990463, -13.600009918, 1.09899997711, 1.0010010004, 1.10200095177, false, false},
		{u8'Êåïêà êðîëèê', 6273, 2, 0.18999999762, 0.0049990001135, 0.02199899964, 2.7999958992, -6.4999952316, 2.9999990463, 0.89699798822, 1.0730099678, 1.01300597191, false, false},
		{u8'Øëÿïêà ñ áàíòèêîì', 5888, 2, 0.120999000967, -0.002000000095, -0.019997999072, 2.09996604919, -1.69997298718, -16.900062561, 1.3579980135, 1.15200901031, 1.22501695156, false, false},
		{u8'Ìàñêà 2022 1', 9982, 2, 0.086997002363, 0.124999001622, 0.00800000038, 0, 0, -6.69999504089, 0.91399997473, 1.0, 0.95200002193, false, false},
		{u8'Øëåì Ìîðòè', 3187, 2, 0.097998000681, 0.023000000045, 0.002001000103, 0, 0, 4.99999809265, 1.09900200367, 0.9780009985, 0.97300100327, false, false},
		{u8'Ìàñêà ÷óìíîãî äîêòîðà', 6449, 2, 0.043999001384, 0.162000998855, -0.002999000018, 2.20000100136, -4.9999961853, -0.89994299412, 0.77900397778, 0.71700197458, 1.03398799896, false, false},
		{u8'Î÷êè Ïàóê', 9915, 2, 0.143000006676, 0.061998998987, 0.003001000034, 1.50001299381, 0.5999879837, 0.79998600483, 1.27500402927, 0.88399899006, 0.95199298859, false, false},
		{u8'Ïàðèê ÿïîøêè', 17416, 2, 0.09499900043, 0.01099999994, -0.00099900004, 0, -1.60000002384, 176.599578857, 1.0850019455, 1.1779999733, 1.16700303555, false, false},
		{u8'Î÷êè Òûêâû', 9914, 2, 0.112999998033, 0.048999998719, 0.002000000095, 3.69999909401, 0, 0, 1.0, 1.0, 1.02099895477, false, false},
		{u8'Î÷êè Áóó', 9912, 2, 0.106999002397, 0.055998001248, 0.003000000026, 4.3999938965, 0, -7.8000040054, 0.89700001478, 1.0, 0.99399197102, false, false},
		{u8'Ïðè÷åñêà 1', 9662, 2, 0.154999002814, 0.006998999976, 0.002999000018, 0, 80.199905396, 95.599975586, 1.0639950037, 1.06500804424, 1.03400099278, false, false},
		{u8'Î÷êè ôëàìèíãî', 2417, 2, 0.091999001801, 0.068998001516, 0.003001000034, 3.29999899864, 0, -4.19999885559, 1.0, 0.83200001717, 0.99799901247, false, false},
		{u8'Íîâîãîäíèé îáîäîê', 3524, 2, 0.148998007178, 0.01599900052, 0.003001000034, 4.60000085831, -3.30013489723, -0.30000001192, 1.00600004196, 1.18900001049, 1.08699905872, false, false},
		{u8'Äèàäåìà Öì', 5565, 2, 0.215999007225, -0.012000000104, 0, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Áàíäà-ìàñêà ÷åðåï', 10823, 2, 0.035999000072, 0.023998999968, -0.000998000032, 2.29999899864, -2.89999890327, 0, 1.0, 1.10399997234, 1.05700004101, false, false},
		{u8'Ìàñêà Marshmallow', 17918, 2, 0.014999000356, 0.036998998374, 0.0049990001135, 0, 92.299987793, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Îáîäîê ñ óøêàìè 1', 6985, 2, 0.192994996905, -0.056997001171, -0.007002000231, 99.100013733, 70.599960327, -91.100013733, 1.0, 1.0, 1.0, false, false},
		{u8'Áóìàæíàÿ ìàñêà êðîëèêà', 4686, 2, 0.095999002457, 0.020999999717, 0, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Íîâîãîäíÿÿ øàïêà', 3517, 2, 0.363000005484, -0.029998999089, 0, 0, 0, -4.79999923706, 1.0, 1.0, 0.855000019073, false, false},
		{u8'Øàïêà îôèöåðà', 17306, 2, 0.123998999596, -0.016999000683, 0.014000000432, 1.19993805885, 3.40001702309, 0, 1.0, 1.06900000572, 1.03200101852, false, false},
		{u8'Øàïêà îôèöåðà 2', 6480, 2, 0.19399903714657, 0.013000998646021, -0.0059999991208315, 1.1999380588531, 3.4000170230865, 0, 1.039999961853, 1.0989999771118, 1.0820009708405, false, false},
		{u8'Øàïêà îôèöåðà 3', 6481, 2, 0.19399903714657, 0.013000998646021, -0.0059999991208315, 1.1999380588531, 3.4000170230865, 0, 1.039999961853, 1.0989999771118, 1.0820009708405, false, false},
		{u8'Øàïêà îôèöåðà 4', 6482, 2, 0.19399903714657, 0.013000998646021, -0.0059999991208315, 1.1999380588531, 3.4000170230865, 0, 1.039999961853, 1.0989999771118, 1.0820009708405, false, false},
		{u8'Øëåì âîäîëàçà', 17339, 2, 0.116999000311, 0.025000000373, -0.001000000047, 91.599906921, 85.999969482, 0, 1.0, 1.06900000572, 1.0, false, false},
		{u8'Ìàñêà ôàðàîíà', 17340, 2, 0.116999000311, 0.025000000373, -0.001000000047, 91.599906921, 85.999969482, 0, 1.0, 1.06900000572, 1.0, false, false},
		{u8'Øàïêà ìîíàðõà', 17344, 2, 0.128998994827, -0.014999999665, 0.012000000104, 0, 0, 7.80000019073, 1.0, 1.0, 1.0, false, false},
		{u8'Øàïêà êàçàêà', 17331, 2, 0.158998996019, 0.0049990001135, 0, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Ìàñêà ìóìèè', 17335, 2, 0.116999000311, 0.025000000373, -0.001000000047, 91.599906921, 85.999969482, 0, 1.0, 1.06900000572, 1.0, false, false},
		{u8'Ìàñêà ñâàðùèêà', 17333, 2, 0.116999000311, 0.025000000373, -0.001000000047, 91.599906921, 85.999969482, 0, 1.0, 1.06900000572, 1.0, false, false},
		{u8'Ãàâàéñêàÿ øëÿïà', 9655, 2, 0.180999994278, -0.027999000624, 0.00800000038, -1.0, -1.30002999306, -2.10000109673, 1.0, 1.0, 1.0, false, false},
		{u8'Ïðè÷åñêà 2', 9663, 2, 0.14499899745, 0.020998999476, 0.0010000000475, -0.5, 88.90007782, 92.500167847, 1.00600004196, 1.0, 1.00199997425, false, false},
		{u8'Êàìåííàÿ ìàñêà', 4856, 2, 0.171000003815, 0.050999000669, 0, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Øëÿïà ñëóãè', 17428, 2, 0.158998996019, 0.0049990001135, 0, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Îáîäîê Íîýëëü', 9762, 2, 0.172997996211, 0.05199899897, 0.00099900004, -178.399780273, -174.79989624, 0.10000000149, 1.0, 1.0, 0.863996982574, false, false},
		{u8'Øëåì Cyber Cat', 9658, 2, 0.086999997497, 0.0019990000874, -0.003000000026, 0, 0, 0, 1.0, 1.02600097656, 1.01999998093, false, false},
		{u8'Ìàñêà àíàíàñà', 9668, 2, 0.086999997497, 0.0019990000874, -0.003000000026, 0, 0, 0, 1.0, 1.02600097656, 1.01999998093, false, false},
		{u8'Ìàñêà Êëîóíà', 6455, 2, 0.091999001801, 0.12499500066, 0.0059989998117, 0.999975025654, -2.0999879837, -5.90038204193, 0.938987970352, 0.976998984814, 0.929984986782, false, false},
		{u8'Îãíåííûå î÷êè', 2419, 2, 0.082998000085, 0.060998000205, 0.0040009999648, 1.10000002384, 0, -10.6999998093, 1.0, 1.0, 1.0, false, false},
		{u8'Øëåì Êðîëèêà', 4679, 2, 0.131999000907, 0.0059989998117, 0, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Øëåì Øðåêà', 3188, 2, 0.012999000028, 0.040998000652, 0.0010010000551, 1.3000010252, 0, 0, 1.04399800301, 0.948998987675, 1.00600600243, false, false},
		{u8'Î÷êè çåëåíûå', 17886, 2, 0.096000000834, 0.047997999936, -0.000000001, 0, 86.200057983, 179.100524902, 1.05800294876, 1.0, 1.09399998188, false, false},
		{u8'Ðåñïèðàòîð', 17172, 2, 0, 0.076999999582767, 0, 0, 0, 0, 1, 1, 1, false, false},
                {u8'Ìàãè÷åñêèé âîçäóøûé øàð 2', 13713, 1, 0.37499800920486, -0.017000000923872, 0.30699801445007, 0, 86, 0, 0.0089990003034472, 0.0089990003034472, 0.0089990003034472, false, false},
		{u8'Êîðîíà èç ïàòðîí', 16936, 2, 0.22499999403954, 0, 0, 0, 88.899955749512, 0, 1, 1, 1, false, false},
		{u8'Çîëîòûå ãàíãñòåðñêèå î÷êè', 17131, 2, 0.05799899995327, 0.016999000683427, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Çîëîòàÿ ãàíãñòåðñêàÿ êåïêà', 17127, 2, 0.21399900317192, 0.043000001460314, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Øàïêà Õèðóçåíà', 4891, 2, 0.068999998271465, 0.0089990003034472, 0, 0, 0, 0, 1.0420000553131, 1.1049989461899, 1.1710000038147, false, false},
		{u8'Ìàñêà ìåäâåäÿ', 15645, 2, 0.079998001456261, 0.061000000685453, -0.0020000000949949, 1.1999380588531, 87.69995880127, -179.29986572266, 1.0339980125427, 1.168998003006, 1.132001042366, false, false},
		{u8'Ìàñêà Êðîëèêà 1', 10384, 2, 0.21199902892113, 0.075998991727829, 0, 0, 0, 0, 1.0499999523163, 1.0499999523163, 1.1399998664856, false, false},
		{u8'Ìàñêà Êðîëèêà 2', 10389, 2, 0.21199902892113, 0.075998991727829, 0, 0, 0, 0, 1.0499999523163, 1.0499999523163, 1.1399998664856, false, false},
		{u8'Ìàñêà Êðîëèêà 3', 10390, 2, 0.21199902892113, 0.075998991727829, 0, 0, 0, 0, 1.0499999523163, 1.0499999523163, 1.1399998664856, false, false},
		{u8'Ìàñêà Êðîëèêà 4', 10391, 2, 0.21199902892113, 0.075998991727829, 0, 0, 0, 0, 1.0499999523163, 1.0499999523163, 1.1399998664856, false, false},
		{u8'Ìàñêà Êðîëèêà 5', 10392, 2, 0.21199902892113, 0.075998991727829, 0, 0, 0, 0, 1.0499999523163, 1.0499999523163, 1.1399998664856, false, false},
		{u8'Ìàñêà Êðîëèêà 6', 10393, 2, 0.21199902892113, 0.075998991727829, 0, 0, 0, 0, 1.0499999523163, 1.0499999523163, 1.1399998664856, false, false},
		{u8'Ìàñêà Êðîëèêà 7', 10394, 2, 0.21199902892113, 0.075998991727829, 0, 0, 0, 0, 1.0499999523163, 1.0499999523163, 1.1399998664856, false, false},
		{u8'Î÷êè ñíåæèíêà', 3374, 2, 0.091998994350433, 0.065998993813992, 0.0099999997764826, 0, 0, 0, 1.0499999523163, 1.0499999523163, 1.1399998664856, false, false},
		{u8'Î÷êè êðàñíûå', 17722, 2, 0.072999998927116, 0.081998996436596, 0.0030009998008609, 95.500015258789, 82.599990844727, 86.799987792969, 1.275004029274, 0.8839989900589, 0.95199298858643, false, false},
		{u8'Î÷êè æåëòûå', 17723, 2, 0.072999998927116, 0.081998996436596, 0.0030009998008609, 95.500015258789, 82.599990844727, 86.799987792969, 1.275004029274, 0.8839989900589, 0.95199298858643, false, false},
		{u8'Î÷êè ñèðåíåâûå', 17724, 2, 0.072999998927116, 0.081998996436596, 0.0030009998008609, 95.500015258789, 82.599990844727, 86.799987792969, 1.275004029274, 0.8839989900589, 0.95199298858643, false, false},
		{u8'Î÷êè ôèîëåòîâûå', 18348, 2, 0.072999998927116, 0.081998996436596, 0.0030009998008609, 95.500015258789, 82.599990844727, 86.799987792969, 1.275004029274, 0.8839989900589, 0.95199298858643, false, false},
		{u8'Î÷êè ÷åðíûå', 18349, 2, 0.072999998927116, 0.081998996436596, 0.0030009998008609, 95.500015258789, 82.599990844727, 86.799987792969, 1.275004029274, 0.8839989900589, 0.95199298858643, false, false},
		{u8'Ýíåðãî ìàñêà Ãîñòà', 17085, 2, 0.086998984217644, 0.029999999329448, 0, 0, 0, 0, 1.0099999904633, 1.039999961853, 1.0999999046326, false, false},
		{u8'Ãîëîâà øîêîëàäíîãî çàéöà', 4780, 2, -0.013001, 0, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Ìàñêà Ãîñòà', 5989, 2, 0.056999, 0.039999999329448, 0, 0, 0, 0, 1.0099999904633, 1.039999961853, 1.0999999046326, false, false},
		{u8'Ìàãè÷åñêèå ñôåðû', 9864, 1, -0.064999997615814, 0, 0, 0, -90.700057983398, 2.9999990463257, 1, 1, 1, false, false},
		{u8'Ìàñêà Åâû', 16809, 2, 0.12099611014128, 0.20600202679634, 0.011000985279679, 2, 355.39999389648, 345.60015869141, 0.92799597978592, 0.97499698400497, 1.1870009899139, false, false},
		{u8'Ìàñêà ðîáîòà', 16810, 2, 0.12099611014128, 0.086001992225647, 0.011000985279679, 2, 355.39999389648, 357.60015869141, 0.92799597978592, 0.97499698400497, 1.1870009899139, false, false},
		{u8'Áåëûé øëåì ïðèøåëüöà', 16716, 2, 0.080996118485928, 0.056001983582973, 0.011000985279679, 2, 355.39999389648, 357.60015869141, 0.92799597978592, 0.97499698400497, 1.1870009899139, false, false},
		{u8'Ñêàôàíäð ñ òåíòàêëÿìè', 9657, 2, 0.079000003635883, -0.003000000026077, -0.0020000000949949, 0, 0, 0, 1, 1.0260009765625, 1.0199999809265, false, false},
		{u8'Êîñòÿíîé õâîñò', 9673, 1, 0.12999899685383, 0.003000000026077, -0.01799900084734, 0, 88.799835205078, 0, 1, 1, 1, false, false},
		{u8'Ìàñêà íåâèäèìêà', 14425, 2, 0.107999, 0.056999, 0.008999, 9.000002, 83.399986, 85.499977, 1.000000, 1.000000, 1.000000, false, false},
		{u8'Êîðîíà èç ïåðüåâ', 9654, 2, 0.133000, 0.050999, 0.002999, 1.000000, 0.000000, -12.699975, 1.100999, 1.080999, 1.052000, false, false},
    },

    --slot 3 (ðóêà)
    {
        {u8'Ëåäÿíîé ìå÷ íà ïîÿñ', 10472, 7, -0.15199899673462, 0.20000000298023, -0.076999999582767, 99.399948120117, 33.500175476074, -4.2999958992004, 1, 1, 1, false, false},
		{u8'Ëåäÿíîé ìå÷ â ðóêó', 3244, 6, 0.16200000047684, -0.032000001519918, 0.4449990093708, -1, -79.700065612793, -6.5999970436096, 1, 1, 1, false, false},
		{u8'Êëèíîê Êðàòîñà 2', 10523, 5, 0.061999000608921, 0.030998000875115, -0.0069980002008379, -5.3000140190125, 97.099594116211, 155.49952697754, 1, 1, 1, false, false},
		{u8'Êîñà ñìåðòè', 2805, 6, 0.071999996900558, -0.0089990003034472, 0.25299900770187, 3.9000070095062, 0, 0, 1, 1, 1, false, false},
		{u8'Ìå÷ Çàáèìàðó', 2401, 6, 0.078998997807503, -0.0089999996125698, 0, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ïðîòîòèï', 7479, 14, -0.28999900817871, -0.019997000694275, -0.021996000781655, 18.000003814697, -4.4000000953674, -172.2999420166, 1, 1, 1, false, false},
		{u8'Ãðîì ñåêèðà', 2236, 6, 0.072999000549316, -0.052997998893261, 0.55299800634384, 0, -93.100067138672, -6.2999958992004, 1, 1, 1, false, false},
		{u8'Âèëû äëÿ îõîòû', 3233, 6, 0.078998997807503, -0.0089999996125698, 0, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Âèëû äüÿâîëà', 2395, 6, 0.078998997807503, -0.0089999996125698, 0, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ïåð÷àòêà Âàé', 5007, 6, -0.053998999297619, -0.020998999476433, -0.044998999685049, 0, -107.10000610352, -93.600021362305, 1, 1, 1, false, false},
		{u8'Êîñà Ìåðñè', 4742, 6, 0.27099901437759, -0.014999999664724, 0.16599999368191, 0, -91.000068664551, -13.699995040894, 1, 1, 1, false, false},
		{u8'Ëóê Êóïèäîíà', 6322, 5, 0.067998997867107, 0.032000001519918, 0.01799999922514, 0, -84.000061035156, 107.69982147217, 1, 1, 1, false, false},
		{u8'Ïðàâàÿ ðóêà ìîíñòðà èç äóìà', 9856, 6, -0.0489990003407, 0.023000000044703, -0.020998999476433, -51.199626922607, -0.70001202821732, 161.09852600098, 0.92199999094009, 1.6689989566803, 1.513002038002, false, false},
		{u8'Òîïîð Ëàâà ñ ïàðòèêëîì', 5012, 6, 0.064998999238014, 0.036998998373747, 0.16400000452995, 0, 0, -107.60001373291, 1, 1, 1, false, false},
		{u8'Ðîæäåñòâåíñêèé ôîíàðü', 3379, 5, 0.067998997867107, 0.032000001519918, 0.01799999922514, 0, -84.000061035156, 107.69982147217, 1, 1, 1, false, false},
		{u8'Ñóìêà èç òûêâû', 9779, 5, 0.067997001111507, -0.0040000001899898, 0, 0, -84.000061035156, 84.799926757813, 0.95499902963638, 0.90599900484085, 0.78399902582169, false, false},
		{u8'Äåçîëÿòîð', 5580, 6, 0.21299900114536, -0.0089999996125698, 0.2339989989996, 0, -112.49997711182, 0, 1, 1, 1, false, false},
		{u8'Ñëîìàííûé ìå÷ Ìåëèîäàñà', 6104, 6, 0.065999999642372, -0.029999999329448, 0.10199999809265, 0, -97.200012207031, 0, 1, 1, 1, false, false},
		{u8'Öâåòíîé ðîæîê', 4898, 6, -0.041999001055956, 0.0060000000521541, 0.33899900317192, 0, -110.69993591309, 0, 1, 1, 1, false, false},
		{u8'Äàíãî', 6097, 6, -0.056999001652002, -0.063000001013279, 0.34499898552895, -78.600021362305, 174.29997253418, -74.999984741211, 1, 1, 1, false, false},
		{u8'Êëåøíÿ êðàáà', 9683, 5, -0.21699999272823, -0.018999999389052, -0.003000000026077, 0, -84.299949645996, -59.500247955322, 1, 1, 1, false, false},
		{u8'Ñâå÷à òîðò', 5959, 6, -0.050000000745058, 0.01799900084734, 0.38099899888039, 0, -19.799997329712, 0, 1, 1, 1, false, false},
		{u8'Ñêðûòûé Êëèíîê Àññàñèíà', 10524, 14, 0.076999001204967, 0.012001000344753, 0.012999000027776, -86.199859619141, 178.60203552246, 1.1000030040741, 1.3150019645691, 1.423014998436, 1.4369790554047, false, false},
		{u8'Ñóëüôóðàñ ìîëîò ðàãíàðîñà', 2237, 6, 0.088999003171921, -0.038998998701572, 0.33199700713158, 0, -86.300163269043, -8.4999980926514, 1, 1, 1, false, false},
		{u8'Ïèï Áîé', 2468, 6, -0.12999999523163, -0.01999899931252, 0.0089990003034472, 102.70008087158, -8.1000156402588, -161.60005187988, 1.0369999408722, 1.1779999732971, 1.0689990520477, false, false},
		{u8'Íàðó÷íûå ÷àñû 4', 18585, 5, 0.007000000216, -0.01600000076, 0.0010000000475, 77.0999679565, 0, 0, 1.17999899387, 0.97399902344, 0.95499998331, false, false},
		{u8'Íàðó÷íûå ÷àñû 3', 18584, 5, 0.007000000216, -0.01600000076, 0.0010000000475, 77.0999679565, 0, 0, 1.17999899387, 0.97399902344, 0.95499998331, false, false},
		{u8'Íàðó÷íûå ÷àñû 2', 18583, 5, 0.007000000216, -0.01600000076, 0.0010000000475, 77.0999679565, 0, 0, 1.17999899387, 0.97399902344, 0.95499998331, false, false},
		{u8'Íàðó÷íûå ÷àñû 1', 18582, 5, 0.007000000216, -0.01600000076, 0.0010000000475, 77.0999679565, 0, 0, 1.17999899387, 0.97399902344, 0.95499998331, false, false},
		{u8'Áóìàæíàÿ âåðòóøêà', 6032, 6, -0.0689989998937, 0.0119989998639, 0.351000010967, -177.299926758, 114.300010681, -4.49999904633, 1.0, 1.0, 1.0, false, false},
		{u8'Sci-Fi Òîïîð', 2128, 6, 0.06999900192, -0.014000000432, 0.2719990015, 0, -91.60018158, -7.2999920845, 1.0, 1.0, 1.0, false, false},
		{u8'Ôîíàðèê íà ïàëêå', 6092, 6, 0.50099897385, 0, 0.39599901438, 0, -100.20006561, 173.99992371, 1.0, 1.0, 1.0, false, false},
		{u8'Ïîñîõ áàíàí', 1024, 6, 0.078998997808, -0.0089999996126, 0, 101.89994049, 17.399929047, -97.59980011, 1.0, 1.0, 1.0, false, false},
		{u8'Òåìíûé êëèíîê', 10782, 6, 0.050999000669, -0.054999001324, 0.26000100374, 12.599985123, 175.20050049, -7.1999959946, 1.0, 1.0, 1.0, false, false},
		{u8'Ìå÷ Ðþêî Ìàòîé Kill La Kill', 2472, 6, 0.076999999583, 0.011998999864, 0.023000000045, 103.799797058, -168.80004883, -11.500014305, 1.0, 1.0, 1.0, false, false},
		{u8'Íàðó÷íûå ÷àñû 5', 18586, 5, 0.007000000216, -0.01600000076, 0.0010000000475, 77.099967957, 0, 0, 1.17999899387, 0.97399902344, 0.95499998331, false, false},
		{u8'Ñâåòîâîé ìå÷ (ðîçîâûé)', 10778, 6, 0.065999001265, 0.028000000864, -0.028999999166, 14.400010109, -89.100074768, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Ñâåòîâîé ìå÷ (çåëåíûé)', 10776, 6, 0.065999001265, 0.028000000864, -0.028999999166, 14.400010109, -89.100074768, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Ñâåòîâîé ìå÷ (îðàíæåâûé)', 10777, 6, 0.065999001265, 0.028000000864, -0.028999999166, 14.400010109, -89.100074768, 0, 1.0, 1.0, 1.0, false, false},
		{u8'DOOM BFG', 2447, 1, 0.192000001669, -0.138999000192, -0.137999996543, 115.299934387, -6.4000020027, 47.000068665, 1.0, 1.0, 1.0, false, false},
		{u8'Çâåçäíûé ìå÷', 2563, 6, 0.061999998986721, -0.0059989998117089, 0.18299999833107, -84,278.60000610352, 87.500015258789, 1, 1, 1, false, false},
		{u8'Êîñà Soul Eater', 2799, 6, 0.078998997808, -0.0089999996126, 0, 101.899940491, 17.399929047, -97.59980011, 1.0, 1.0, 1.0, false, false},
		{u8'Äóáèíêà ïîëèöèè', 6429, 6, 0.078998997808, -0.0089999996126, 0, 101.899940491, 17.399929047, -97.59980011, 1.0, 1.0, 1.0, false, false},
		{u8'Ïîñîõ Öì', 5567, 6, 0.032999001443, 0.038998998702, 0.233998999, 0, -108.599983215, 0, 1.0, 1.0, 1.0, false, false},
                {u8'×åìîäàí Ëàáóáó', 16780, 6, 0.33500000834465, -0.040998999029398, 0.019999999552965, 0, 0, 179.90002441406, 1, 1, 1, false, false},
		{u8'Ïîñîõ 3', 7483, 6, 0.078998997808, -0.0089999996126, 0, 101.899940491, 17.399929047, -97.59980011, 1.0, 1.0, 1.0, false, false},
		{u8'Ìîëîò êðîëèê', 4682, 6, 0.078998997808, -0.0089999996126, 0, 101.899940491, 17.399929047, -97.59980011, 1.0, 1.0, 1.0, false, false},
		{u8'Ïîñîõ ïèíüÿòà', 1023, 6, 0.078998997808, -0.0089999996126, 0, 101.899940491, 17.399929047, -97.59980011, 1.0, 1.0, 1.0, false, false},
		{u8'Ýíåðãåòè÷åñêèé êóëàê', 6101, 6, 0.091999001801, 0.014999000356, 0.00799900014, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Ïåð÷àòêà Êðîëè÷üÿ ëàïêà', 4929, 6, 0.128998994827, 0.0089990003034, 0.047998998314, 0, 166.799987793, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Ñâåòîâîé ìå÷', 10748, 6, 0.098999999464, 0.012999000028, 0.014999999665, 110.099746704, -5.59989213943, 104.900093079, 1.0, 1.0, 1.0, false, false},
		{u8'Êàíèñòðà íà áåäðî', 19621, 1, -0.093000002205372, 0.086998999118805, -0.19699999690056, 0, 69.999984741211, -145.90000915527, 0.658999979496, 0.7239990234375, 0.81299901008606,false,false},
                {u8'Ãîâíî íà áåäðî', 19621, 7, 0, -0.13899900019169, -0.12299899756908, 0, -95.500091552734, 176.80020141602, 0.98699998855591, 1, 1, false, false},
		{u8'Àãàíèì', 5572, 6, 0.029998999089003, 0, 0.20700000226498, 0, -101.69996643066, -8.3999996185303, 1, 1, 1, false, false},
		{u8'Ãàíãñòåðñêàÿ ñóìêà', 17082, 6, 0.072999998927116, 0.014999999664724, 0.018998999148607, 0, -89, 65.700019836426, 1, 1, 1, false, false},
		{u8'Ñâåòîâîé ìå÷ (ñèíèé)', 10775, 6, 0.073999002575874, 0.038998000323772, -0.028999000787735, 14.400010108948, -89.100074768066, 0, 1, 1, 1, false, false},
		{u8'Ìå÷ ìîðêîâêà', 18327, 6, 0.076999001204967, -0.027999000623822, 0.25799998641014, 12.799999237061, -179.69999694824, 0, 1, 1, 1, false, false},
		{u8'Ëåäåíåö', 5939, 6, 0.071998000144958, 0.028999999165535, -0.10100000351667, 104.69948577881, 9.4998273849487, -93.799697875977, 1, 1, 1, false, false},
		{u8'Áîæåñòâåííûé òîïîð èç àíèìå: Ðèòòà 7 ñìåðòíûõ ãðåõîâ', 4597, 6, 0.071998000144958, 0.028999999165535, -0.10100000351667, 104.69948577881, 9.4998273849487, -93.799697875977, 1, 1, 1, false, false},
		{u8'Ïåð÷àòêà áåñêîíå÷íîñòè', 6124, 6, 0.13499900698662, 0.035999998450279, 0.047998998314142, 0, -106.50002288818, -110.99997711182, 1, 1, 1, false, false},
		{u8'Ìå÷ Fortnite', 3305, 6, 0.078998997807503, -0.0089999996125698, 0, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ìå÷ 1', 6941, 6, 0.078998997807503, -0.0089999996125698, 0, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ìå÷ 2', 6942, 6, 0.078998997807503, -0.0089999996125698, 0, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ìå÷ 3', 6943, 6, 0.078998997807503, -0.0089999996125698, 0, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ìå÷ 4', 6944, 6, 0.078998997807503, -0.0089999996125698, 0, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ìå÷ 5', 17164, 6, 0.038999006152153, -0.02899999730289, 0.44999983906746, 92.899940490723, 267.39993286133, 358.40020751953, 1, 1, 1, false, false},
		{u8'Òîïîð Çåëüäû', 5011, 6, 0.0089990068227053, 0.020999999716878, 0.1499999910593, 92.899940490723, 180.39993286133, 74.400207519531, 1, 1, 1, false, false},
		{u8'Ýíåðãåòè÷åñêèåå ÷àñû ìèðàæà', 5816, 5, 0.0070000002160668, -0.026000000536442, 0.0010000000474975, 324.09997558594, 4, 280, 1.1799989938736, 0.92399907112122, 0.9549999833107, false, false},
		{u8'Øàðèêè Çåëåíûå', 6294, 5, 0, 0, 0, 0, 0, 18, 1, 1, 1, false, false},
		{u8'Øàðèêè Ôèîëåòîâûå', 6295, 5, 0, 0, 0, 0, 0, 18, 1, 1, 1, false, false},
		{u8'Øàðèêè Ñèðåíåâûå', 6296, 5, 0, 0, 0, 0, 0, 18, 1, 1, 1, false, false},
		{u8'Øàðèêè Ãîëóáûå ', 6297, 5, 0, 0, 0, 0, 0, 18, 1, 1, 1, false, false},
		{u8'Øàðèêè Æåëòûå', 6298, 5, 0, 0, 0, 0, 0, 18, 1, 1, 1, false, false},
		{u8'Øàðèêè Ðîçîâûå', 6299, 5, 0, 0, 0, 0, 0, 18, 1, 1, 1, false, false},
		{u8'Øàðèêè Íåæíî-ðîçîâûå', 6300, 5, 0, 0, 0, 0, 0, 18, 1, 1, 1, false, false},
		{u8'Øàðèêè Êðàñíûå', 6301, 5, 0, 0, 0, 0, 0, 18, 1, 1, 1, false, false},
		{u8'Øàðèêè Òåìíî-ðîçîâûå', 6302, 5, 0, 0, 0, 0, 0, 18, 1, 1, 1, false, false},
                {u8'Ìàãè÷åñêèé âîçäóøûé øàð 3', 13714, 1, 0.37499800920486, -0.017000000923872, 0.30699801445007, 0, 86, 0, 0.0089990003034472, 0.0089990003034472, 0.0089990003034472, false, false},
		{u8'Øàðèê çåëåíûé', 6285, 5, 0, 0, 0, 0, 0, 18, 1, 1, 1, false, false},
		{u8'Øàðèê ôèîëåòîâûé', 6286, 5, 0, 0, 0, 0, 0, 18, 1, 1, 1, false, false},
		{u8'Øàðèê ñèðåíåâûé', 6287, 5, 0, 0, 0, 0, 0, 18, 1, 1, 1, false, false},
		{u8'Øàðèê ãîëóáîé', 6288, 5, 0, 0, 0, 0, 0, 18, 1, 1, 1, false, false},
		{u8'Øàðèê æåëòûé', 6289, 5, 0, 0, 0, 0, 0, 18, 1, 1, 1, false, false},
		{u8'Øàðèê ðîçîâûé', 6290, 5, 0, 0, 0, 0, 0, 18, 1, 1, 1, false, false},
		{u8'Øàðèê íåæíî-ðîçîâûé', 6291, 5, 0, 0, 0, 0, 0, 18, 1, 1, 1, false, false},
		{u8'Øàðèê êðàñíûé', 6292, 5, 0, 0, 0, 0, 0, 18, 1, 1, 1, false, false},
		{u8'Øàðèê òåìíî-ðîçîâûé', 6293, 5, 0, 0, 0, 0, 0, 18, 1, 1, 1, false, false},
                {u8'Âîçäóøíûé øàðèê Happy Birthday', 9393, 5, -0.041000001132488, 0.0099989995360374, 0.0089990003034472, -23.900018692017, -10.800004959106, 4.4999990463257, 1, 0.93400001525879, 1, false, false},
		{u8'Ôëaã 1', 6430, 6, 0.058999005705118, 0.056000012904406, -0.11300000548363, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ôëaã 2', 6431, 6, 0.058999005705118, 0.056000012904406, -0.11300000548363, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ôëaã 3', 6432, 6, 0.058999005705118, 0.056000012904406, -0.11300000548363, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ôëaã 4', 6433, 6, 0.058999005705118, 0.056000012904406, -0.11300000548363, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ôëaã 5', 6434, 6, 0.058999005705118, 0.056000012904406, -0.11300000548363, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ôëaã 6', 6435, 6, 0.058999005705118, 0.056000012904406, -0.11300000548363, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ôëaã 7', 6436, 6, 0.058999005705118, 0.056000012904406, -0.11300000548363, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ôëaã 8', 6437, 6, 0.058999005705118, 0.056000012904406, -0.11300000548363, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ôëaã 9', 6438, 6, 0.058999005705118, 0.056000012904406, -0.11300000548363, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ôëàã 10', 6439, 6, 0.058999005705118, 0.056000012904406, -0.11300000548363, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ôëàã 11', 6440, 6, 0.058999005705118, 0.056000012904406, -0.11300000548363, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ôëàã 12', 6441, 6, 0.058999005705118, 0.056000012904406, -0.11300000548363, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ôëàã 13', 6442, 6, 0.058999005705118, 0.056000012904406, -0.11300000548363, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ôëàã 14', 6443, 6, 0.058999005705118, 0.056000012904406, -0.11300000548363, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ôëàã 15', 6444, 6, 0.058999005705118, 0.056000012904406, -0.11300000548363, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ôëàã 16', 6445, 6, 0.058999005705118, 0.056000012904406, -0.11300000548363, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ôëàã 17', 6446, 6, 0.058999005705118, 0.056000012904406, -0.11300000548363, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ôëàã 18', 6447, 6, 0.058999005705118, 0.056000012904406, -0.11300000548363, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Ôëàã 19', 6448, 6, 0.058999005705118, 0.056000012904406, -0.11300000548363, 101.89994049072, 17.399929046631, -97.599800109863, 1, 1, 1, false, false},
		{u8'Êîñìè÷åñêàÿ ðóêà', 16631, 6, 0.009998, -0.025000, 0.035999, -178.399963, -165.299988, 0.000000, 1.121999, 1.108999, 1.090999, false, false},
		{u8'Ìàãè÷åñêèå ñôåðû', 9864, 1, -0.064999997615814, 0, 0, 0, -90.700057983398, 2.9999990463257, 1, 1, 1, false, false},
		{u8'Ìîëîò Òîðà', 6125, 5, 0.070999, -0.009000, -0.103000, 171.999954, -8.000000, -103.700012, 1.000000, 1.000000, 1.000000, false, false},
		{u8'Ìå÷ Âê', 5566, 6, -0.035999, 0.017999, 0.488999, 0.000000, -102.300003, 0.000000, 1.000000, 1.000000, 1.000000, false, false},
		{u8'Ñôåðû Èíâîêåðà', 5569, 1, 0.33599901199341, 0, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Êîñòÿíîé õâîñò', 9673, 1, 0.12999899685383, 0.003000000026077, -0.01799900084734, 0, 88.799835205078, 0, 1, 1, 1, false, false},
		{u8'Ìîëîò Nokia', 4601, 6, 0.078999, -0.009000, 0.000000, 101.899940, 17.399929, -97.599800, 1.000000, 1.000000, 1.000000, false, false},
		{u8'Êîñìè÷åñêàÿ êîñà', 16626, 6, 0.187998, 0.017999, 0.269998, 0.000000, -88.299980, 0.000000, 1.000000, 1.000000, 1.000000, false, false},
		{u8'Ìèäàñ', 5576, 6, 0.000000, 0.000000, 0.000000, -174.900040, -157.199966, 0.000000, 1.000000, 1.000000, 1.000000, false, false},
    },

    --slot 4 (Ãðóäü)
    {
        {u8'Ëåòàþùèå ñíåæèíêè', 10386, 1, 0.092998996376991, 0.050999000668526, 0.014999999664724, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Ëåòàþùèå ñâå÷è', 9769, 1, 0.10499899834394, 0, 0, 0, 0, -91.80005645752, 1, 1, 1, false, false},
		{u8'Ìàãè÷åñêèå ñôåðû', 9864, 1, -0.064999997615814, 0, 0, 0, -90.700057983398, 2.9999990463257, 1, 1, 1, false, false},
		{u8'Ñôåðû Èíâîêåðà', 5569, 1, 0.33599901199341, 0, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Êëèíîê Êðàòîñà 1', 10522, 6, 0.046998001635075, 0.023995000869036, 0.014999000355601, 16.499994277954, -113.99992370605, -168.69981384277, 1, 1, 1, false, false},
		{u8'Äåìîíè÷åñêàÿ áðîíÿ', 2383, 6, -0.2339989989996, 0.023000000044703, -0.089998997747898, 102.10005187988, -149.3999786377, -11.399997711182, 0.88200002908707, 1.0779989957809, 1.0169999599457, false, false},
		{u8'Àóðà ëè÷à', 4904, 1, -0.17599900066853, 0, 0, 0, -91.19995880127, 0.80799901485443, 1, 1, 1, false, false},
		{u8'Öåïü Ìàõèíàòîðà (ñòàðàÿ)', 10652, 1, 0.30099999904633, 0.039000000804663, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Öåïü Ìàõèíàòîð ñ àíèìàöèåé', 5009, 1, 0.30099999904633, 0.039000000804663, 0, 0, 0, 0, 1, 1, 1, false, false},
        {u8'Öåïü Stone Island', 5010, 1, 0.30099999904633, 0.091, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Ïðàâîå ïëå÷î ìîíñòðà èç äóìà', 9859, 4, -0.12000399827957, -0.020999999716878, 0.11800000071526, 8.899923324585, 166.49964904785, 4.5000381469727, 1, 1.0729999542236, 1, false, false},
		{u8'Ïîòðåïàííûé ïðàâûé íàðóêàâíèê', 9852, 6, -0.13899600505829, 0.003000000026077, -0.040996000170708, -173.70001220703, -161.59866333008, -7.399995803833, 0.82799798250198, 0.92199802398682, 0.87699997425079, false, false},
		{u8'Ìåäàëüîí âåäüìàêà', 2239, 1, 0.18699799478054, 0.15799799561501, -0.0099999997764826, 0, 0, -18.900007247925, 1, 1, 1, false, false},
		{u8'Çâåçäî÷êè', 4906, 1, 0.11999899893999, 0, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Ðåàêòîð Òîíè Ñòàðêà', 10526, 1, 0.1879999935627, 0.16499799489975, 0.0040000001899898, 3.5999920368195, 6.7000031471252, -17.800052642822, 1, 0.9200000166893, 0.9639989733696, false, false},
		{u8'Ìèëûå ìûøêè', 2802, 1, 0.69199997186661, 0, -0.016000000759959, -87.300003051758, 0, 178.19981384277, 1, 1, 1, false, false},
		{u8'Áàðñåòêà Supreme', 17379, 1, -0.28199601173401, 0.030999999493361, -0.024000000208616, 77.600280761719, 74.600738525391, 102.39930725098, 0.84100300073624, 1.1710000038147, 0.91299897432327, false, false},
		{u8'Ðîæäåñòâåííûå êîëîêîëü÷èêè', 3376, 1, 0.2419990003109, 0.18099899590015, 0.0070000002160668, -0.89999997615814, -1.3999990224838, -27.999979019165, 1, 1, 1, false, false},
		{u8'Íàøèâêà Öâåòîê', 17929, 1, 0.21299999952, 0.13699799776, 0.103000000119, -158.299728394, 0, 22.5000228882, 0.57800400257, 0.34900099039, 0.57700300217, false, false},
		{u8'Öåïî÷êà Øðåê', 3250, 1, 0.23399800062, 0.18300099671, -0.010998000391, -2.20000004768, 0, 0, 1.06299996376, 0.91600000858, 1.1289999485, false, false},
		{u8'Áàðñåòêà Chanel', 17337, 1, -0.28199601173, 0.030999999493, -0.024000000209, 77.600280762, 74.600738525, 102.39930725, 0.84100300074, 1.17100000381, 0.91299897432, false, false},
		{u8'Áàðñåòêà Gucci', 17338, 1, -0.28199601173, 0.030999999493, -0.024000000209, 77.600280762, 74.600738525, 102.39930725, 0.84100300074, 1.17100000381, 0.91299897432, false, false},
		{u8'Îðóæèå CyberPunk #2', 18479, 7, 0.034000001848, 0.148999005556, -0.045999001712, 0, 0, -0.99999898672, 1.0, 1.0, 1.0, false, false},
		{u8'Êîñòÿíîé õâîñò', 9673, 1, 0.12999899685383, 0.003000000026077, -0.01799900084734, 0, 88.799835205078, 0, 1, 1, 1, false, false},
		{u8'Ìàãè÷åñêèé ïîðòàë', 2451, 1, -0.179000005126, 0.02199899964, 0, -1.29999995232, 89.700088501, 0, 1.0, 1.0, 1.0, false, false},
		{u8'ßéöà ãðàíàòû', 4938, 1, 0.135000005364, 0.092998996377, 0, 0, 0, 0, 1.0, 1.07500004768, 1.0, false, false},
		{u8'Äüÿâîëüñêèé õâîñòèê', 9091, 1, -0.224998995662, -0.122000001371, 0, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Îæåðåëüå Ìàéÿ', 9670, 1, 0.359999001026, 0.025999000296, -0.0089999996126, 0, 90.699798584, -177.600006104, 1.0, 0.974997997284, 1.0, false, false},
		{u8'Áðîíÿ Íîýëëü 1', 9759, 4, 0.120999000967, 0.0019990000874, -0.030997000635, 12.800000191, -23.800022125, 0, 1.0, 1.48501098156, 1.0, false, false},
		{u8'Öåïü Èëþìèíàòà', 18598, 17, -0.014999000356, 0.059999000281, 0, 95.599998474, 147.200012207, 0, 0.915000021458, 0.920998990536, 1.0, false, false},
		{u8'Çîëîòàÿ ãàíãñòåðñêàÿ öåïü', 17130, 1, 0.22800000011921, 0.085998997092247, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Öåïü Òðåøåð', 4714, 1, 0.27500000596, 0.053998999298, 0, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Ôîòîàïïàðàò íà ãðóäü', 19623, 1, 0.20100000500679, 0.17199899256229, -0.0089990003034472, 79.79997253418, 60.200038909912, 97.800003051758, 0.61599898338318, 0.71599900722504, 0.59200000762939, false,false},
		{u8'Öåïü ÑÂÀÃÀ', 17067, 1, 0.25299900770187, 0.076999001204967, -0.0069989999756217, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Öåïü SWAG', 17063, 1, 0.22899900376797, 0.081998996436596, -0.0099999997764826, 0, 0, 0, 1, 1, 1, false, false},
                {u8'Ìàãè÷åñêèé âîçäóøûé øàð 4', 13715, 1, 0.37499800920486, -0.017000000923872, 0.30699801445007, 0, 86, 0, 0.0089990003034472, 0.0089990003034472, 0.0089990003034472, false, false},
		{u8'Óçè â ãðàôôèòè', 17083, 1, -0.071998000144958, 0.039000000804663, -0.18099799752235, 95.999969482422, -171.79995727539, -11.700000762939, 1, 1, 1, false, false},
		{u8'Ãðàâè-ïóøêà', 7475, 5, 0.076999992132187, 0.013999998569489, 0.0010000000474975, 324.09997558594, 91.800003051758, 280, 1.1799989938736, 0.92399907112122, 0.9549999833107, false, false},
		{u8'Öåïî÷êà æìûõà', 6533, 1, 0.29100000858307, 0.039000000804663, 0, 265, 18, 271, 1.2699997425079, 1, 1, false, false},
    },

    --slot 5 (ïëå÷î)
    {
        {u8'Îõðàííûé äðîí', 4596, 1, 0.54299902915955, -0.096997000277042, -0.43599900603294, 0, -3.2999980449677, 5.1000661849976, 0.75999802350998, 1, 0.72599601745605, false, false},
		{u8'Ëåâîå ïëå÷î ìîíñòðà èç äóìà', 9858, 3, -0.11000700294971, -0.0019980000797659, -0.13099700212479, -23.00008392334, -168.00007629395, 10.300051689148, 1, 1.0750060081482, 1.0030000209808, false, false},
		{u8'Äåìîíè÷åñêèå ïëå÷è', 2382, 1, 0.1789990067482, 0.05799800157547, 0.0040000001899898, 0, 0, 0, 1, 0.95700001716614, 0.89899802207947, false, false},
		{u8'Òåìíîå äèòÿ', 2795, 1, 0.37200000882149, 0.080999001860619, 0.36999899148941, 92.699890136719, -179.69999694824, 0, 1, 1, 1, false, false},
		{u8'Àíèìèðîâàííàÿ ëåòó÷àÿ ìûøü', 9860, 1, 0.51600098609924, 0.033998999744654, -0.34799700975418, 179.19995117188, 0, 0, 0.32100000977516, 0.28699800372124, 0.30100101232529, false, false},
		{u8'Ìàãè÷åñêèé âîçäóøûé øàð 1', 13712, 1, 0.37499800920486, -0.017000000923872, 0.30699801445007, 0, 86, 0, 0.0089990003034472, 0.0089990003034472, 0.0089990003034472, false, false},
        {u8'Ìàãè÷åñêèé âîçäóøûé øàð 2', 13713, 1, 0.37499800920486, -0.017000000923872, 0.30699801445007, 0, 86, 0, 0.0089990003034472, 0.0089990003034472, 0.0089990003034472, false, false},
        {u8'Ìàãè÷åñêèé âîçäóøûé øàð 3', 13714, 1, 0.37499800920486, -0.017000000923872, 0.30699801445007, 0, 86, 0, 0.0089990003034472, 0.0089990003034472, 0.0089990003034472, false, false},
        {u8'Ìàãè÷åñêèé âîçäóøûé øàð 4', 13715, 1, 0.37499800920486, -0.017000000923872, 0.30699801445007, 0, 86, 0, 0.0089990003034472, 0.0089990003034472, 0.0089990003034472, false, false},
        {u8'Ìàãè÷åñêèé âîçäóøûé øàð 5', 13716, 1, 0.37499800920486, -0.017000000923872, 0.30699801445007, 0, 86, 0, 0.0089990003034472, 0.0089990003034472, 0.0089990003034472, false, false},
        {u8'Ìàãè÷åñêèé âîçäóøûé øàð 6', 13717, 1, 0.37499800920486, -0.017000000923872, 0.30699801445007, 0, 86, 0, 0.0089990003034472, 0.0089990003034472, 0.0089990003034472, false, false},
        {u8'Ìàãè÷åñêèé âîçäóøûé øàð 7', 13718, 1, 0.37499800920486, -0.017000000923872, 0.30699801445007, 0, 86, 0, 0.0089990003034472, 0.0089990003034472, 0.0089990003034472, false, false},
        {u8'Âîçäóøíûé øàð Õèêêà', 4699, 1, 0.35399800539, -0.017000000924, 0.185999006033, 0, 86.599998474, 0, 0.008999000303, 0.008999000303, 0.008999000303, false, false},
		{u8'Àìóëåòû Àíõê', 5005, 1, 0.5740020275116, 0, 0, 0, 90, 0, 1, 1, 1, false, false},
		{u8'Êîñòÿíîé õâîñò', 9673, 1, 0.12999899685383, 0.003000000026077, -0.01799900084734, 0, 88.799835205078, 0, 1, 1, 1, false, false},
		{u8'Ìàãè÷åñêèå ñôåðû', 9864, 1, -0.064999997615814, 0, 0, 0, -90.700057983398, 2.9999990463257, 1, 1, 1, false, false},
		{u8'Ìåõàíè÷åñêèé ìåäâåäü', 10367, 1, 0.507000, 0.000000, -0.389000, 0, 0, 0, 0.700000, 0.700000, 0.700000, false, false},
        {u8'Ñôåðû íîâîõðîíî', 2477, 1, 0.5740020275116, 0, 0, 0, 0, 0, 1, 1, 1, false, false},
        {u8'Ïîðòàëüíûå êîëüöà', 2450, 1, 0.85299801826477, 0.032999001443386, -0.039000000804663, -1.2999980449677, -90.099983215332, 0, 1, 1, 1, false, false},
        {u8'Ìåõàíè÷åñêèé æóê', 10356, 1, 0.66799902916, 0.072999000549, -0.63500201702, -175.100112915, -178.900039673, -179.099777222, 0.58499997854, 0.70399898291, 0.71700000763, false, false},
        {u8'Íàïëå÷íèêè Îðêîâ Warcraft', 4605, 1, 0.27599900960922, -0.0089990003034472, 0, 0, 174.6000213623, 1, 1, 1, 1, false, false},
		{u8'Ïèðàòñêèé êîìïàñ', 17159, 1, 0.52799999713898, 0, -0.45199999213219, 0, 0, -141.99989318848, 1, 1, 1, false, false},
		{u8'Ëåòó÷èé Ãîëëàíäåö', 17155, 1, 0.037999000400305, 0, -0.028000000864267, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Ïîòðåïàííûé ëåâûé íàðóêàâíèê', 9851, 5, -0.12999600172043, -0.029996000230312, -0.0010029999539256, -28.600103378296, -6.2999968528748, 178.69873046875, 0.79099702835083, 0.8579980134964, 0.8850029706955, false, false},
		{u8'Ìàéí Ñêåëåò', 17715, 1, 0.23499900102615, -0.20800000429153, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Øàðû Ðàìáë', 17165, 1, 0.56899899244308, 0, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Èãðóøêà Hatsune Miku íà ïëå÷å', 4603, 1, 0.41099900007248, 0, 0.17700000107288, 0, -13.199998855591, 5.1000661849976, 1, 1, 1, false, false},
		{u8'¨ëêà íà ïëå÷î', 3522, 1, 0.50199902057648, -0.018998999148607, 0.20000000298023, 3.4000010490417, -11.700016021729, -0.20000000298023, 0.358000010252, 0.31000000238419, 0.32499900460243, false, false},
		{u8'Áðîøü íà øåþ', 7466, 17, 0.050999999046, 0.0390000008047, 0, -113.900878906, 99.0003051758, -68.4998550415, 1.19800198078, 1.40699994564, 1.09399998188, false, false},
		{u8'Ìèëûé äðîí', 4878, 1, 0.50400000811, 0, -0.55199897289, 0, 87.0000152588, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Çâåçäà ñìåðòè', 10747, 1, 0.49399799109, 0, -0.0049999998882, 3.50001502037, 88.3998718262, 0, 1.0, 1.0, 1.0, false, false},
		{u8'TIE-Èñòðåáèòåëü', 10780, 1, 0.49399900436, 0.0250000003725, -0.01600000076, 1, -89.6001586914, -7.09999799728, 1.0, 1.0, 1.0, false, false},
		{u8'Öèòàäåëü Ðèêîâ', 3311, 1, 0.51700001955, 0.063000001013, -0.008998000063, 0, -15.300001144, 11.100001335, 1.0, 1.0, 1.0, false, false},
		{u8'Íàïëå÷íèê óáèéöû', 4876, 1, 0.245998993516, -0.032999999821, 0.29699999094, 0, -18.900022507, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Áóëüáàçàâð', 10665, 1, 0.416999012232, -0.03599999845, -0.193000003695, 0, 19.7999897, -6.9999990463, 0.9119989872, 0.87699997425, 0.82300102711, false, false},
		{u8'Ñôåðû ýìîäçè', 4854, 1, 0.512998998165, 0, -0.425998985767, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Øèâà', 5570, 1, 0.23099899292, 0.005998999812, -0.216000005603, 0, -83.700012207, 0, 1.0, 1.17099905014, 1.0, false, false},
		{u8'Äîñïåõ íà ëåâóþ ðóêó', 7462, 5, -0.134000003338, -0.037999998778, -0.017000000924, 0, -90.699920654, 38.799995422, 1.07300305367, 1.00800001621, 1.0, false, false},
		{u8'Âîçäóøíûé øàð Òûêâà', 5598, 1, 0.35399800539, -0.017000000924, 0.185999006033, 0, 86.599998474, 0, 0.008999000303, 0.008999000303, 0.008999000303, false, false},
		{u8'Íàïëå÷íèêè òóðáîñâèíà', 4762, 1, 0.340999007225, 0.050999000669, -0.058998998255, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Íàïëå÷íèêè èç ãðàíàò', 4761, 1, 0.279000014067, 0.065999999642, 0, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Áðîíÿ Íîýëëü 2', 9761, 3, 0.107998996973, 0.034000001848, 0.012999000028, -28.89997673, 20.800022125, 9.19999790192, 1.0, 1.0, 1.0, false, false},
		{u8'Âîçäóøíûé øàð Ballas', 6071, 1, 0.35399800539, -0.017000000924, 0.185999006033, 0, 86.599998474, 0, 0.008999000303, 0.008999000303, 0.008999000303, false, false},
		{u8'Âîçäóøíûé øàð Grove', 6143, 1, 0.35399800539, -0.017000000924, 0.185999006033, 0, 86.599998474, 0, 0.008999000303, 0.008999000303, 0.008999000303, false, false},
		{u8'Âîçäóøíûé øàð ×èòåðà', 6375, 1, 0.35399800539017, -0.017000000923872, 0.18599900603294, 0, 86.599998474121, 0, 0.0089990003034472, 0.0089990003034472, 0.0089990003034472, false, false},
		{u8'Ïàðîâîé âîðîòíèê', 2400, 1, 0.0089999996125698, 0.16799899935722, 0.0089999996125698, -1.3999969959259, -0.89999997615814, -3.2000069618225, 1, 1, 1,false,false},
		{u8'Àíèìèðîâàííûé äðàêîí', 4870, 1, -0.38100001215935, 0, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Ëåòàþùèé êîò', 5895, 1, 0.41400000452995, 0, -0.37799900770187, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Ñìåðòü ñ êîñîé', 5907, 1, 0.47099900245667, 0, -0.29699999094009, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Âîçäóøíûé øàð Ãàíãñòåðñêîå ñîëíöå', 17096, 1, 0.35399800539017, -0.017000000923872, 0.18599900603294, 0, 86.599998474121, 180, 0.0089990003034472, 0.0089990003034472, 0.0089990003034472, false, false},
		{u8'Ïëàíåòíûé ýêñïðåññ', 2402, 1, 0.4619970023632, -0.10399899631739, -0.44699800014496, 1, 90.799797058105, -7.0999979972839, 1, 1, 1, false, false},
		{u8'Êàòàëèçàòîð àêóëà', 16613, 1, 0.70700001716614, 0, -0.37299901247025, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Àðêàíà Âèñïà', 5409, 1, 0.72299897670746, 0, -0.6690000295639, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Ìåõàíè÷åñêèé êîò', 10354, 1, 0.50299906730652, -0.036997012794018, -0.3759990632534, 88, 179.70001220703, 352.10006713867, 0.75999802350998, 1, 0.72599601745605, false, false},
		{u8'Ïðèçðàê', 2793, 1, 0.41400000452995, 0, -0.29799908399582, 96, 194, 0, 0.77000021934509, 0.83000016212463, 1, false, false},
		{u8'Ìèíè ÄåËîðåàí', 2476, 1, 0.42400002479553, 0.059999994933605, -0.26799911260605, 103, 92, 267, 0.77000021934509, 0.83000016212463, 1, false, false},
		{u8'Äðîí (â ôàéëàõ èãðû)', 4273, 1, 0.42400002479553, 0.059999994933605, -0.45799893140793, 195, 179, 267, 0.70000028610229, 0.70000028610229, 0.92000007629395, false, false},
		{u8'Êàëüöèôåð', 2208, 1, 0.4539999961853, 0.089999988675117, -0.28799909353256, 195, 179, 171, 0.70000028610229, 0.70000028610229, 0.92000007629395, false, false},
    },

    --slot 6 (ñïèíà)
    {   
        {u8'Ëåäÿíûå êðûëüÿ', 9764, 1, 0.16599600017071, -0.12399800121784, 0.0019990000873804, 176.19999694824, 2.6999990940094, 0, 0.71299701929092, 1, 1, false, false},
		{u8'Ðîçîâûå êðûëüÿ áàáî÷êè', 9763, 1, 0.16599999368191, -0.13300002247095, -0.016001001000404, 176.19999694824, 0.6999990940094, 0, 1, 1, 1, false, false},
		{u8'Äüÿâîëñêèå êðûëüÿ', 9766, 1, 0.22900000214577, -0.105, -0.0080000003799796, -0.80007201433182, 178.20042419434, -2.6000020503998, 1, 1, 1, false, false},
		{u8'Ëåäÿíîé ùèò', 10379, 1, 0.068998001515865, -0.13900700211525, -0.0019990000873804, 0.099996000528336, -0.39999601244926, 0.099999003112316, 0.72000002861023, 1, 1, false, false},
		{u8'Ëåäÿíîé òîïîð', 10473, 1, -0.0049990001134574, -0.15500099956989, 0.13199999928474, 0.70000797510147, 115.60004425049, -0.3999949991703, 0.96499902009964, 1, 0.9169989824295, false, false},
		{u8'Âåëîñèïåä íà ñïèíó', 14370, 1, 0.1330000013113, -0.16499899327755, 0, 0, 124.90005493164, 0, 1, 1, 1, false, false},
		{u8'Ëåäÿíîé òîïîð 2', 5142, 1, 0.13199900090694, -0.13500000536442, -0.023998999968171, 0, -150.00012207031, 0, 1, 1, 1, false, false},
		{u8'Ëåäÿíûå êðûëüÿ 2', 10380, 1, 0.27200099825859, -0.21500000357628, -0.0070000002160668, 0, -0.79999697208405, 0, 1, 1, 1, false, false},
		{u8'Ìàãè÷åñêèå ñôåðû', 9864, 1, -0.064999997615814, 0, 0, 0, -90.700057983398, 2.9999990463257, 1, 1, 1, false, false},
		{u8'Êîñòÿíûå êðûëüÿ', 2792, 1, 0.15299800038338, -0.17399899661541, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Êîñòÿíîé õâîñò', 9673, 1, 0.12999899685383, 0.003000000026077, -0.01799900084734, 0, 88.799835205078, 0, 1, 1, 1, false, false},
		{u8'Ãèäðà íà ñïèíó', 9672, 1, 0.13499900698662, -0.065999001264572, 0.01999899931252, 0, 88.799835205078, 0, 1, 1, 1, false, false},
		{u8'Ïëàù äüÿâîëà', 9850, 1, 0.07599999755621, -0.0080000003799796, 0.0069989999756217, 177.19999694824, -0.20000199973583, 0, 1, 1, 1, false, false},
		{u8'Ùèò ñíåæèíêà íà ñïèíó', 3409, 1, 0.1409990042448, -0.15799899399281, -0.014999999664724, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Êëèíêè ïîëóìåñÿöà', 9868, 1, 0.16599999368191, -0.13300002247095, -0.016001001000404, 176.19999694824, 0.6999990940094, 0, 1, 1, 1, false, false},
		{u8'Êëèíêè êðàòîñà íà ñïèíó', 10521, 1, 0.179000005126, -0.11799900233746, -0.0020000000949949, 2.0000030994415, 0, 0.20000000298023, 1, 1, 1, false, false},
        {u8'Ãîëóáîé ñþðèêåí', 9679, 1, 0.076999001204967, -0.10999999940395, -0.028999999165535, 0, -1.9999990463257, 2.8999989032745, 1, 1, 1, false, false},
        {u8'Ìåõàíè÷åñêèå êðûëüÿ ãîëóáûå', 2397, 1, 0.2, -0.1, 0, 0, 90, 0, 1, 1, 1, false, false},
        {u8'Ìåõàíè÷åñêèå êðûëüÿ æåëòûå', 10655, 1, 0.092000000178814, -0.065999999642372, 0, 0, 90, 180, 1, 1, 1, false, false},
        {u8'Áèëë èç Ãðàâèòè Ôîëëñ', 2263, 1, 0.12999899685383, -0.30798599123955, -0.028999999165535, 0, -1.9999990463257, 2.8999989032745, 1, 1, 1, false, false},
        {u8'Ìàãè÷åñêèé âîçäóøûé øàð 6', 13717, 1, 0.37499800920486, -0.017000000923872, 0.30699801445007, 0, 86, 0, 0.0089990003034472, 0.0089990003034472, 0.0089990003034472, false, false},
		{u8'Õâîñò ìîíñòðà èç äóìà', 9854, 1, -0.15799599885941, -0.027000000700355, -0.022998999804258, -179.40258789063, 3.3999989032745, -11.500003814697, 1.0720000267029, 0.70700001716614, 0.90700000524521, false, false},
		{u8'Êðûëüÿ ôåè', 9757, 1, 0.16599999368191, -0.13300002247095, -0.016001001000404, 176.19999694824, 0.6999990940094, 0, 1, 1, 1, false, false},
		{u8'Ñèíèå êðûëüÿ áàáî÷êè', 9756, 1, 0.16599999368191, -0.13300002247095, -0.016001001000404, 176.19999694824, 0.6999990940094, 0, 1, 1, 1, false, false},
		{u8'Ìåõàíè÷åñêàÿ àêóëà', 9865, 1, 0.26400199532509, -0.14699299633503, -0.029999999329448, -179.4001159668, 5.5997109413147, 89.400047302246, 1, 1, 1, false, false},
		{u8'Êðûëüÿ Èíâîêåðà', 5526, 1, 0.33000001311302, -0.071998000144958, 0, 178.19999694824, 0, 0, 0.71199601888657, 1, 0.83700001239777, false, false},
		{u8'Ìîðñêîé ÿêîðü', 17154, 1, 0.15499900281429, -0.14599899947643, 0, 179.3999786377, 0, 0, 1, 1, 1, false, false},
		{u8'Ðûáàöêàÿ ëàâêà', 17913, 1, 0.16099999845028, -0.17299999296665, 0, 177.09989929199, 2.5999999046326, 0, 1, 1, 1, false, false},
		{u8'Êðîâàâûå ðóêè', 2823, 1, 0.44100001454353, -0.22200000286102, 0.0060000000521541, 177.00010681152, -176.39952087402, 178.19981384277, 1, 1, 1, false, false},
		{u8'Êðûëüÿ Îñû', 2390, 1, 0.23099899291992, -0.11199899762869, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Ïîñîõ ìóäðåöà 7ìè ïóòåé', 6093, 1, 0.059999998658895, -0.22499899566174, 0, -174.00001525879, 0, 0, 1, 1, 1, false, false},
		{u8'Àäñêàÿ ãèòàðà', 9681, 1, 0.22400000691414, -0.08499900251627, 0, 0, 88.400016784668, 0, 1, 1, 1, false, false},
		{u8'Ùèò îðäû', 2217, 1, 0.062999002635479, -0.1409990042448, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Êðûëüÿ Êàïèòàíà Àìåðèêè', 2392, 1, 0.19199800491333, -0.10499999672174, -0.011998999863863, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Êàòàíû íà ñïèíó', 6321, 1, 0.179000005126, -0.11799900233746, -0.0020000000949949, 2.0000030994415, 0, 0.20000000298023, 1, 1, 1, false, false},
		{u8'Ñåðäöå íà ñïèíó', 3519, 1, 0.099999003112316, -0.1629990041256, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Ðþêçàê êîðîâà', 2423, 1, 0.13399900496, -0.20299999416, -0.00799900014, 0, -2.5, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Îðóæèå íà ñïèíó 4', 6469, 1, 0.21400000155, -0.097999997437, 0, 0, -42.3000106812, 2.29999804497, 1.0, 1.0, 1.0, false, false},
		{u8'Îðóæèå íà ñïèíó 5', 6470, 1, 0.21400000155, -0.097999997437, 0, 0, -42.3000106812, 2.29999804497, 1.0, 1.0, 1.0, false, false},
		{u8'Ëåòó÷àÿ ìûøü íà ñïèíó', 2804, 1, 0.13399900496, -0.20299999416, -0.00799900014, 0, -2.5, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Ðþêçàê ïîæàðíîãî', 17282, 1, 0.13399900496, -0.20299999416, -0.00799900014, 0, -2.5, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Áàñ òîïîð', 2393, 1, 0.13399900496, -0.20299999416, -0.00799900014, 0, -2.5, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Êðûëüÿ Êóïèäîíà', 6320, 1, 0.48899999261, -0.090998999774, 0.01600000076, -169.99992371, 93.999923706, -10.500003815, 1.0, 1.0, 1.0, false, false},
		{u8'Ìå÷ êîðîëÿ âðåìåíè', 2467, 1, 0.071998998523, -0.13499900699, -0.049998998642, 9.7000017166, 113.3000412, -8.3999977112, 1.0, 1.0, 1.0, false, false},
		{u8'Hover board', 2412, 1, 0.032999001443, -0.139999002218, 0, 0, 36.800010681, -2.7999999523, 1.0, 1.0, 1.0, false, false},
		{u8'Ðþêçàê telegram', 17336, 1, 0.13399900496, -0.20299999416, -0.00799900014, 0, -2.5, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Êèñà Ìèñè', 6965, 1, 0.166999995708, -0.117997996509, -0.0219979994, -1.19999802113, 92.099983215, 1.79999899864, 1.0, 1.0, 1.0, false, false},
		{u8'Ýëåêòðîãèòàðà Ðèêà', 3185, 1, 0.192999005318, -0.166998997331, -0.014999999665, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Òîïîð íà ñïèíó', 326, 1, 0.017999000847, -0.104000002146, 0.15000000596, 12.800002098, 114.199905396, -19.499475479, 1.3059990406, 0.80999702215, 0.81199800968, false, false},
		{u8'Òûêâà ñ ñàëþòîì', 5911, 1, 0.275999009609, -0.273000001907, 0, -179.400009155, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Òåñàê íà ñïèíó', 18095, 1, 0.289999008179, -0.142000004649, -0.034000001848, 0, -124.200164795, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Íîâîãîäíÿÿ ïóøêà', 18085, 1, 0.317999005318, -0.148990005255, 0.286000013351, -44.800052643, 146.200561523, 39.200088501, 1.0, 1.0, 1.0, false, false},
		{u8'Îðóæèå íà ñïèíó 3', 6468, 1, 0.21400000155, -0.097999997437, 0, 0, -42.300010681, 2.29999804497, 1.0, 1.0, 1.0, false, false},
		{u8'Ñþðèêåí 4', 8152, 1, 0.193000003695, -0.091999001801, 0, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Ñþðèêåí 2', 8027, 1, 0.193000003695, -0.091999001801, 0, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Ñþðèêåí 3', 5879, 1, 0.193000003695, -0.091999001801, 0, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Ñþðèêåí 1', 5880, 1, 0.193000003695, -0.091999001801, 0, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Êðûëüÿ Windblade', 2564, 1, 0.207999005914, -0.279000014067, 0.0089999996126, 0, -2.09999990463, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Àðáàëåò Òðàêñû', 5467, 1, 0.11999899894, -0.155999004841, 0, 0, -145.199951172, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Êðûëüÿ Ìåðñè', 4750, 1, 0.192999005318, -0.112998999655, -0.006000000052, -179.399978638, 0, 16.200004578, 1.0, 1.0, 1.0, false, false},
		{u8'FireCube êðûëüÿ', 18314, 1, 0.175999999046, -0.181999996305, -0.075999997556, 0, -177.300018311, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Àåãèñ', 5573, 1, 0.143998995423, -0.182998999953, 0, -179.900009155, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Ïàó÷üè ëàïû', 4998, 1, 0.140999004245, -0.125999003649, 0, -177.299987793, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Êàìåííûå êðûëüÿ', 5957, 1, 0.203999996185, -0.134999006987, 0, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Ýêçîñêåëåò íà ñïèíó', 5003, 1, 0.209999993443, -0.134999006987, 0, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Íàäóâíîé êðóã', 4748, 1, 0.087999001145, -0.28900000453, -0.018999999389, -177.800094604, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Àíèìèðîâàííîå ñîëíöå', 4749, 1, 0.112999998033, -0.171000003815, -0.026000000536, -178.900161743, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Èãðóøêà çàé÷èê', 4921, 1, 0.13399900496, -0.202999994159, -0.00799900014, 0, -2.5, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Ìå÷ êîðîëÿ Ëè÷à', 9926, 1, 0.396997988224, -0.13999800384, -0.233999997377, 0, -66.89995575, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Ìîðñêàÿ çâåçäà', 6022, 1, 0.164998993278, -0.155999004841, 0, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Êðîâàâûå êðûëüÿ', 5585, 1, 0.279998987913, -0.065999001265, 0, 176.399765015, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Ãóðàì íà ñïèíó', 1276, 1, 0.040998999029, -0.179000005126, 0, 3.90000009537, 92.09992218, 95.400085449, 1.0, 1.0, 1.0, false, false},
		{u8'Ýíåðãåòè÷åñêèé ðþêçàê', 2127, 1, 0.131999000907, -0.185999006033, -0.028999999166, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Ìîðñêîé òîïîð', 4868, 1, 0.359999001026, -0.155999004841, -0.092998996377, 0, 0, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Äåëüòàïëàí', 10450, 1, 0.041999995708466, -0.16499899327755, 0, 0, -2.0999350547791, 0, 1, 1, 1, false, false},
		{u8'Êðûëüÿ ñóêóáà', 9866, 1, 0.0059999916702509, -0.17300003767014, -0.016001001000404, 175.19999694824, 94.200004577637, 0, 1, 1 ,1, false, false},
		{u8'Ùóïàëüöà Ñëåíäåðìåíà àíèìèðîâàííûå', 5813, 1, 0.18899899721146, -0.050999000668526, 0, 0, 0, -9.3000001907349, 1, 1, 1, false, false},
		{u8'Çîëîòîé M4', 17095, 1, 0, -0.13999900221825, 0, 0, 31.399995803833, 0, 1, 1, 1, false, false},
		{u8'Áåéñáîëüíàÿ áèòà "Compton"', 17080, 1, 0, -0.079999998211861, 0, 0, 26.300010681152, 0, 1, 1, 1, false, false},
		{u8'Ñêåéòáîðä "F{uck you"', 17077, 1, 0, -0.14299899339676, 0, -176.90003967285, 22.099998474121, 0, 1, 1, 1, false, false},
		{u8'Íîâîãîäíÿÿ âèíòîâêà', 18090, 1, 0.27399700880051, -0.10999800264835, -0.13799700140953, -173.19969177246, 167.59959411621, 5.8999710083008, 1, 0.9200000166893, 0.96399801969528, false, false},
		{u8'Ëåãåíäàðíàÿ ïåðåíîñíàÿ ëàâêà', 5857, 1, 0.15399990975857, -0.15099903941154, -0.025000018998981, -178.5, 0, 0, 0.72499889135361, 0.48499912023544, 0.85299897193909, false, false},
		{u8'Êðûëüÿ áàáî÷êè', 9671, 1, 0.041999001055956, -0.075000002980232, 0.0039989999495447, 0, 90.899993896484, 0, 1, 1, 1, false, false},
		{u8'Ãîëëàíäñêèé øòóðâàë', 17156, 1, 0, -0.097000002861023, 0, 94.600044250488, 0, 155.20001220703, 1, 1, 1, false, false},
		{u8'Âèäåîêàðòà RTX4090 íà ñïèíó', 5001, 1, 0.032999001443386, -0.16199900209904, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Áîëüøîé ñþðèêåí íà ñïèíó', 6082, 1, 0.20099900662899, -0.10499899834394, 0, 0, 0, 0, 1, 1, 1, false, false},
		{u8'Êîñà ÊóáîÑòðàáà', 18578, 1, 0.17200000584126, -0.10499899834394, 0, 0, 159.50007629395, 0, 1, 1, 1, false, false},
		{u8'Êðûëüÿ ßñòðåáà', 9755, 1, 0.19600000977516, -0.093000024557114, -0.0060010012239218, 178.19999694824, 89.699996948242, 179, 1, 1, 1, false, false},
		{u8'Ðþêçàê áîëüøàÿ êðàñíàÿ êíîïêà', 4609, 1, 0.13399900496, -0.20299999416, -0.00799900014, 0, -2.5, 0, 1.0, 1.0, 1.0, false, false},
		{u8'Êàòàíà èç Nier', 16706, 1, 0.192000, -0.192000, 0.000000, 0.000000, 46.399994, 0.000000, 1.000000, 1.000000, 1.000000, false, false},
		{u8'Êðûëüÿ ïàäøåãî', 5896, 1, 0.302999, -0.213000, 0.000000, -179.399948, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000, false, false},
		{u8'Õýëëîóèíñêèé ìîëîò', 9925, 1, 0.408999, -0.050999, -0.155999, 7.900072, -55.499992, -169.500229, 1.000000, 1.000000, 1.000000, false, false},
		{u8'Ïàó÷üè íîãè', 9843, 1, -0.059999994933605, 0.099999971687794, -0.019999999552965, -174.30000305176, 1.8999990224838, 10.699999809265, 0.67000102996826, 0.7049999833107, 0.74499893188477, false, false},
		{u8'Êîñìè÷åñêèé Äæåòïàê', 7271, 1, -0.059999994933605, 0.099999971687794, -0.019999999552965, -174.30000305176, 1.8999990224838, 10.699999809265, 0.67000102996826, 0.7049999833107, 0.74499893188477, false, false}
    },
}

local popular_skins = {
    {id = 13379, name = u8("Ëóôôè÷")},
    {id = 114, name = u8("Ghetto 114")},
    {id = 115, name = u8("Ghetto 115")},
    {id = 116, name = u8("Ghetto 116")},
    {id = 13735, name = u8("Ïàâåë Äóðîâ")},
    {id = 5892, name = u8("Áàáóë¸â")},
    {id = 9924, name = u8("Ôðåääè Êðþãåð")},
    {id = 9749, name = u8("Êðèê")},
    {id = 74, name = u8("Ãàçàðîâ")},
    {id = 13730, name = u8("Ãîóñò")},
    {id = 13383, name = u8("Ãðóò")},
    {id = 954, name = u8("Ìîðãåíøòåðí")},
    {id = 1843, name = u8("Áîðÿ Ãàâðèëþê")},
    {id = 14268, name = u8("Ñóïåðìåí")},
    {id = 15492, name = u8("Ñïåöíàçîâåö")},
    {id = 12144, name = u8("Ñêóô")},
    {id = 14520, name = u8("Ñëàâèê")},
    {id = 9977, name = u8("Ñëåíäåðìåí")},
    {id = 14247, name = u8("Äæåê Ðîæäåñòâåíñêèé")},
    {id = 14248, name = u8("Äæåê Ñêåëåò")},
    {id = 14267, name = u8("Äæîêåð")},
    {id = 15494, name = u8("Äåíäæè")},
    {id = 1842, name = u8("Àíòîí")},
    {id = 14792, name = u8("×åëîâåê-ìóðàâåé")},
    {id = 13382, name = u8("Ôåðìåð")},
    {id = 14512, name = u8("Ãðèáû 1")},
    {id = 12143, name = u8("Êàðëèê âàãîñ")},
    {id = 12142, name = u8("Êàðëèê ãðóâ")},
    {id = 3369, name = u8("Êàëüìàð Èãðîê")},
    {id = 5786, name = u8("Êàëüìàð Èãðîê 2")},
    {id = 10366, name = u8("Êèáåðïàíê Äýâèä")},
    {id = 10365, name = u8("Êèáåðïàíê Ðåáåêêà")},
    {id = 10364, name = u8("Êèáåðïàíê Ëþñè")},
    {id = 5791, name = u8("Êàëüìàð (æåí)")},
    {id = 5790, name = u8("Êàëüìàð (æåí) 2")},
    {id = 9748, name = u8("Õàðëè Êâèí")},
    {id = 9747, name = u8("Óýíçäè Àääàìñ")},
    {id = 9985, name = u8("Äæèíêñ")},
    {id = 9750, name = u8("Áåçóìíàÿ Àëèñà")},
    {id = 12136, name = u8("Àëüòóøêà")},
    {id = 14266, name = u8("Òðàêñà àðêàíà")},
    {id = 14522, name = u8("Ìåðñè")},
    {id = 14501, name = u8("Íàðÿä Õèêêè 1")},
    {id = 14502, name = u8("Íàðÿä Õèêêè 2")},
    {id = 14503, name = u8("Íàðÿä Õèêêè 3")},
    {id = 14504, name = u8("Íàðÿä Õèêêè 4")},
    {id = 14505, name = u8("Íàðÿä Õèêêè 5")},
    {id = 13386, name = u8("Êîñìè÷åñêàÿ Õèêêà")},
    {id = 13396, name = u8("Êîñìè÷åñêàÿ Õèêêà 2")},
    {id = 15513, name = u8("Ïàóýð")},
    {id = 15511, name = u8("Ìàêèìà")},
    {id = 13389, name = u8("Ìýðè")},
    {id = 9826, name = u8("Ñëåíäåð (Äëèííûé)")},
    {id = 15515, name = u8("Hallowen Slenderman")},
    {id = 10344, name = u8("Clown")},
    {id = 12992, name = u8("Irina")},
    {id = 14292, name = u8("Êîðîâà")},
    {id = 14293, name = u8("Õàñêè")},
    {id = 14294, name = u8("Áàðàí")}
}

local glowEffect_data = {u8 "glowEffect", 14426, 1, -1.079977254868, -0, 0, 0, 0, 0, 1, 1, 1}
local walkstyle_data = {
    "man",
    "shuffle",
    "oldman",
    "gang1",
    "gang2",
    "oldfatman",
    "fatman",
    "jogger",
    "drunkman",
    "blindman",
    "swat",
    "woman",
    "shopping",
    "busywoman",
    "sexywoman",
    "pro",
    "oldwoman",
    "fatwoman",
    "jogwoman",
    "oldfatwoman"
}
local walkstyle_list = {
    u8 "(Ì) Îáû÷íàÿ",
    u8 "(Ì) øàôë",
    u8 "(Ì) Äåä",
    u8 "(Ì) Ãåòòîâåö 1",
    u8 "(Ì) Ãåòòîâåö 2",
    u8 "(Ì) Æèðíûé äåä",
    u8 "(Ì) Æèðíûé",
    u8 "(Æ) Äæîããåð",
    u8 "(Ì) Ïüÿíûé (ALT)",
    u8 "(Ì) Ñëåïîé",
    u8 "(V) SWAT a.k.a Ðè÷è",
    u8 "(Æ) Îáû÷íàÿ",
    u8 "(Æ) ñóïåðìàðêåò (ALT)",
    u8 "(Æ) Çàíÿòàÿ ïèçäà",
    u8 "(Æ) Ñåêñè ÷èêñà",
    u8 "(Æ) Ïðî",
    u8 "(Æ) Áàáêà",
    u8 "(Æ) Æèðíàÿ òåëêà",
    u8 "(Æ) Áåã",
    u8 "(Æ) Ñòàðàÿ, æèðíàÿ áàáêà"
}

local jsonListPath = {
    dir = getWorkingDirectory() .. "\\config\\AcsWear",
    file = getWorkingDirectory() .. "\\config\\AcsWear\\list" .. thisScript().version .. ".json"
}

function jsonSave(tbl)
    local f = io.open(jsonListPath.file, "w+")
    if f then
        local jsonString = encodeJson(tbl or items_data or default_items_data)
        jsonString =
            jsonString:gsub(",%[", ",\n\t["):gsub("},%{", "},\n\t{"):gsub("%[%[", "[\n\t["):gsub("%]%]", "]\n]")
        f:write(jsonString)
        f:close()
    else
        print("[AcsWear] Îøèáêà: íå óäàëîñü îòêðûòü JSON äëÿ çàïèñè")
    end
end

function jsonRead()
    local path = jsonListPath.file
    local f = io.open(path, "r")
    if not f then
        jsonSave(default_items_data)
        return default_items_data
    end
    local s = f:read("*a")
    f:close()

    local success, t = pcall(decodeJson, s)
    if not success then
        print("[AcsWear] Îøèáêà ÷òåíèÿ JSON: " .. tostring(t))
        local backupPath = path .. ".backup"
        os.rename(path, backupPath)
        print("[AcsWear] Ñîçäàí backup ïîâðåæäåííîãî ôàéëà: " .. backupPath)
        jsonSave(default_items_data)
        return default_items_data
    end

    t = t or {}
    local acc = t
    local guard = 0
    while type(acc) == "table" and acc.accessories and guard < 3 do
        acc = acc.accessories
        guard = guard + 1
    end
    if type(acc) ~= "table" then
        acc = default_items_data
    end
    return acc
end

local editor_posX = imgui.ImFloat(0)
local editor_posY = imgui.ImFloat(0)
local editor_posZ = imgui.ImFloat(0)
local editor_rotX = imgui.ImFloat(0)
local editor_rotY = imgui.ImFloat(0)
local editor_rotZ = imgui.ImFloat(0)
local editor_oldX = imgui.ImFloat(0)
local editor_oldY = imgui.ImFloat(0)
local editor_oldZ = imgui.ImFloat(0)
local editor_oldRotX = imgui.ImFloat(0)
local editor_oldRotY = imgui.ImFloat(0)
local editor_oldRotZ = imgui.ImFloat(0)
local editor_sizeX = imgui.ImFloat(1.0)
local editor_sizeY = imgui.ImFloat(1.0)
local editor_sizeZ = imgui.ImFloat(1.0)
local editor_oldSizeX = imgui.ImFloat(1.0)
local editor_oldSizeY = imgui.ImFloat(1.0)
local editor_oldSizeZ = imgui.ImFloat(1.0)

local window_editor = imgui.ImBool(false)
local editor_item = imgui.ImInt(0)
local editor_item_combo = {u8 "Íå âûáðàíî"}

local color_list_data = {
    {u8 "Ñòàíäàðòíûé", -1},
    {u8 "Êðàñíûé", -16776961},
    {u8 "Çåëåíûé", -16711936},
    {u8 "Ñèíèé", -65536},
    {u8 "Ðîçîâûé", -65281},
    {u8 "Îðàíæåâûé", -16744193},
    {u8 "Áèðþçîâûé", -256},
    {u8 "Æåëòûé", -16728065}
}
local armour_color_list_data = {
    {u8 "Ñòàíäàðòíûé", -1},
    {u8 "DyLllA", -16776961},
    {u8 "Êðàñíûé", -16711936},
    {u8 "Çåëåíûé", -65536},
    {u8 "Ñèíèé", -65281},
    {u8 "Ðîçîâûé", -16744193},
    {u8 "Îðàíæåâûé", -256},
    {u8 "Áèðþçîâûé", -16728065}
}
local selected_color_armour = imgui.ImInt(math.max(1, math.min(ini.colors.armour or 1, #armour_color_list_data)))
local fightstyle_data = {
    {u8 "Ñòàíäàðíûé", 4},
    {u8 "Áîêñ", 5},
    {u8 "Êóíã-Ôó", 6},
    {u8 "Knee head", 7},
    {u8 "Grabkick", 15},
    {u8 "Elbows", 16}
}
local armour_items_data = {
    {u8'Ñïèíà ìîíñòðà èç äóìà', 9857, 1, 0.084996998310089, 0.010995999909937, -0.0040000001899898, -177.40083312988, 0.69999098777771, -0.70000600814819, 0.91100400686264, 0.86399900913239, 0.95600098371506, false, false},
	{u8'Êîñòÿííîé áðîíåæèëåò', 9844, 1, 0.000000, 0.000000, 0.000000, 176.400055, 2.599997, 7.099990, 0.946999, 0.995000, 1.000000, false, false},
	{u8'Áðîíåæèëåò Ãàãàðèí', 4660, 1, 0.0979980006814, 0.032997000962496, 0, -1.7000000476837, -1.6000100374222, -5.3999800682068, 0.88699400424957, 0.81295502185822, 0.80792701244354, false, false},
	{u8'Áðîíåæèëåò Supreme', 9674, 1, 0.11900100111961, 0.031998001039028, 0, -1.7000000476837, -1.6000119447708, -5.3999800682068, 0.92199397087097, 0.92295801639557, 0.88492697477341, false, false},
	{u8'Áðîíåæèëåò Âåòêà Ñàêóðû', 9675, 1, 0.11900100111961, 0.031998001039028, 0, -1.7000000476837, -1.6000119447708, -5.3999800682068, 0.92199397087097, 0.92295801639557, 0.88492697477341, false, false},
	{u8'Áðîíåæèëåò ñ ðàçãðóçêîé', 6066, 1, 0.026000000536442, 0.072999000549316, 0, 0, 0, 0, 1, 1, 1, false, false},
	{u8'Áðîíåæèëåò Ãîðÿùèé ïåñ', 4757, 1, 0.092999, 0.035999, -0.014000, 0.000000, 0.000000, 0.000000, 1.000000, 1.000000, 1.000000, false, false},
	{u8'Áðîíåæèëåò Arizona', 2454, 1, 0.11900100111961, 0.031998001039028, 0, -1.7000000476837, -1.6000119447708, -5.3999800682068, 0.92199397087097, 0.92295801639557, 0.88492697477341, false, false},
	{u8'Áðîíåæèëåò Burger King', 18088, 1, 0.11900100111961, 0.011997000314295, -0, -1.7000000476837, -1.6000100374222, -5.3999800682068, 0.92199301719666, 0.92295801639557, 0.88492602109909, false, false},
	{u8'Áðîíåæèëåò Êàðàòåëÿ', 2464, 1, 0.11900100111961, 0.031998001039028, 0, -1.7000000476837, -1.6000119447708, -5.3999800682068, 0.92199397087097, 0.92295801639557, 0.88492697477341, false, false},
	{u8'Áðîíåæèëåò Àòàêà Òèòàíîâ', 2197, 1, 0.11900100111961, 0.031998001039028, 0, -1.7000000476837, -1.6000119447708, -5.3999800682068, 0.92199397087097, 0.92295801639557, 0.88492697477341, false, false},
	{u8'Áðîíåæèëåò ÁîÄæåê', 2282, 1, 0.11900100111961, 0.031998001039028, 0, -1.7000000476837, -1.6000119447708, -5.3999800682068, 0.92199397087097, 0.92295801639557, 0.88492697477341, false, false},
	{u8'Áðîíåæèëåò òåòðàäü ñìåðòè', 2283, 1, 0.11900100111961, 0.031998001039028, 0, -1.7000000476837, -1.6000119447708, -5.3999800682068, 0.92199397087097, 0.92295801639557, 0.88492697477341, false, false},
	{u8'Áðîíåæèëåò Óíåñåííûå ïðèçðàêàìè', 2198, 1, 0.11900100111961, 0.031998001039028, 0, -1.7000000476837, -1.6000119447708, -5.3999800682068, 0.92199397087097, 0.92295801639557, 0.88492697477341, false, false},
	{u8'Áðîíåæèëåò Îðäû', 2285, 1, 0.11900100111961, 0.031998001039028, 0, -1.7000000476837, -1.6000119447708, -5.3999800682068, 0.92199397087097, 0.92295801639557, 0.88492697477341, false, false},
	{u8'Áðîíåæèëåò (õç êîãî)', 16830, 1, 0.12900100648403, 0.041997000575066, -0, -1.7000000476837, -1.6000100374222, -5.3999800682068, 1.0319929122925, 1.0929578542709, 1.0249259471893, false, false},
	{u8'Áðîíåæèëåò Ìàðâåë', 2286, 1, 0.11900100111961, 0.031998001039028, 0, -1.7000000476837, -1.6000119447708, -5.3999800682068, 0.92199397087097, 0.92295801639557, 0.88492697477341, false, false},
	{u8'Áðîíåæèëåò Ìîðòàë êîìáàò', 2287, 1, 0.11900100111961, 0.031998001039028, 0, -1.7000000476837, -1.6000119447708, -5.3999800682068, 0.92199397087097, 0.92295801639557, 0.88492697477341, false, false},
	{u8'Áðîíåæèëåò Èãðà â êàëüìàðà', 2288, 1, 0.11900100111961, 0.031998001039028, 0, -1.7000000476837, -1.6000119447708, -5.3999800682068, 0.92199397087097, 0.92295801639557, 0.88492697477341, false, false},
	{u8'Áðîíåæèëåò Ó÷èõà', 2291, 1, 0.11900100111961, 0.031998001039028, 0, -1.7000000476837, -1.6000119447708, -5.3999800682068, 0.92199397087097, 0.92295801639557, 0.88492697477341, false, false},
	{u8'Áðîíåæèëåò Wednesday', 2292, 1, 0.11900100111961, 0.031998001039028, 0, -1.7000000476837, -1.6000119447708, -5.3999800682068, 0.92199397087097, 0.92295801639557, 0.88492697477341, false, false},
	{u8'Áðîíåæèëåò Half Life', 2463, 1, 0.11900100111961, 0.031998001039028, -0, -1.7000000476837, -1.6000119447708, -5.3999800682068, 0.92199397087097, 0.92295801639557, 0.88492697477341, false, false},
        {u8'Ìàãè÷åñêèé âîçäóøûé øàð 7', 13718, 1, 0.37499800920486, -0.017000000923872, 0.30699801445007, 0, 86, 0, 0.0089990003034472, 0.0089990003034472, 0.0089990003034472, false, false},
	{u8'Äåìîíè÷åñêèé áðîíåæèëåò', 9846, 1, 0.098001003265, 0.027999000624, -0.008999000303, -172.500213623, 2.50001001358, 3.60002493858, 1.01902198792, 1.00913000107, 0.989069998264, false, false},
	{u8'Áðîíÿ Íîýëü 3', 9760, 4, -0.024997999892, -0.08900000155, 0.017000000924, 19.999996185, -6.999997139, 11.599993706, 1.0, 1.0, 1.0, false, false},
}

local changeskin = imgui.ImBool(ini.skin.enabled)
local skinid = imgui.ImInt(ini.skin.skinid)
local savedSkin = 0
local skin_rollerFix = imgui.ImBool(ini.other.rollerfix)
local skin_NormalSkinsTurn = imgui.ImBool(ini.other.normalturnfix)

local glow = imgui.ImBool(ini.slots.glow)

local selected_slot = {ini.slots.s1, ini.slots.s2, ini.slots.s3, ini.slots.s4, ini.slots.s5, ini.slots.s6, ini.slots.s7}
local selected_color = {
    ini.colors.s1,
    ini.colors.s2,
    ini.colors.s3,
    ini.colors.s4,
    ini.colors.s5,
    ini.colors.s6,
    ini.colors.s7
}

local walkstyle_enabled = imgui.ImBool(ini.other.walkstyle_enabled)
local walkstyle_selected = imgui.ImInt(ini.other.walkstyle)
local fightstyle_selected = imgui.ImInt(ini.other.fightstyle)
local fight_list = {}

local armour_selected = imgui.ImInt(ini.slots.armour)
local armour_items = {u8 "Íåò"}
local randomize_button = imgui.ImBool(false)

for i = 1, #fightstyle_data do
    table.insert(fight_list, #fight_list + 1, fightstyle_data[i][1])
end
for i = 1, #armour_items_data do
    table.insert(armour_items, #armour_items + 1, armour_items_data[i][1])
end

local russian_characters = {
    [168] = "¨",
    [184] = "¸",
    [192] = "À",
    [193] = "Á",
    [194] = "Â",
    [195] = "Ã",
    [196] = "Ä",
    [197] = "Å",
    [198] = "Æ",
    [199] = "Ç",
    [200] = "È",
    [201] = "É",
    [202] = "Ê",
    [203] = "Ë",
    [204] = "Ì",
    [205] = "Í",
    [206] = "Î",
    [207] = "Ï",
    [208] = "Ð",
    [209] = "Ñ",
    [210] = "Ò",
    [211] = "Ó",
    [212] = "Ô",
    [213] = "Õ",
    [214] = "Ö",
    [215] = "×",
    [216] = "Ø",
    [217] = "Ù",
    [218] = "Ú",
    [219] = "Û",
    [220] = "Ü",
    [221] = "Ý",
    [222] = "Þ",
    [223] = "ß",
    [224] = "à",
    [225] = "á",
    [226] = "â",
    [227] = "ã",
    [228] = "ä",
    [229] = "å",
    [230] = "æ",
    [231] = "ç",
    [232] = "è",
    [233] = "é",
    [234] = "ê",
    [235] = "ë",
    [236] = "ì",
    [237] = "í",
    [238] = "î",
    [239] = "ï",
    [240] = "ð",
    [241] = "ñ",
    [242] = "ò",
    [243] = "ó",
    [244] = "ô",
    [245] = "õ",
    [246] = "ö",
    [247] = "÷",
    [248] = "ø",
    [249] = "ù",
    [250] = "ú",
    [251] = "û",
    [252] = "ü",
    [253] = "ý",
    [254] = "þ",
    [255] = "ÿ"
}
function string.rlower(s)
    s = s:lower()
    local strlen = s:len()
    if strlen == 0 then
        return s
    end
    s = s:lower()
    local output = ""
    for i = 1, strlen do
        local ch = s:byte(i)
        if ch >= 192 and ch <= 223 then
            output = output .. russian_characters[ch + 32]
        elseif ch == 168 then
            output = output .. russian_characters[184]
        else
            output = output .. string.char(ch)
        end
    end
    return output
end

function sampev.onRequestSpawnResponse(response)
    if enabled.v then
        lua_thread.create(
            function()
                wait(1)
                apply()
                applyWalkStyle(walkstyle_selected.v)
                applyFightStyle()
            end
        )
    end
end

function sampev.onSendCommand(cmd)
    if cmd:lower() == "/acs" then
        window.v = not window.v
        return false
    elseif cmd:lower() == "/acswlg" then
        logger.v = not logger.v
        return false
    elseif cmd:find("/acsw.load (.+)") then
        key = cmd:match("/acsw.load (.+)")
        keyLoad(key)
        sampAddChatMessage("OK: " .. key, -1)
    elseif cmd:lower() == "/acswupdate" then
        checkForUpdates(true)
        return false
    end
end

local DEBUG = imgui.ImBool(ini.other.debugMode)

function debugmsg(text)
    if DEBUG.v then
        sampAddChatMessage(m_tag .. "[DEBUG]: " .. text, -1)
        print(m_tag .. "[DEBUG]: " .. text)
    end
end

function createList()
    jsonSave(default_items_data)
end

local ad = {
    state = imgui.ImBool(true),
    dialogId = 8,
    posX = 0,
    posY = 0,
    sizeX = 500,
    sizeY = 150,
    mainWindowSize = 300,
    vertical_offset = 5,
    text_header = "VKontakte",
    link = "https://vk.com/bushidojoo",
    IMAGE = nil,
    image_path = getWorkingDirectory() .. "\\resource\\AcsWear\\banner",
    image_link = "https://i.yapx.ru/a8O4K.jpg"
}
local mainWindowPos = {x = 0, y = 0}

function ad_checkImage()
    if not doesDirectoryExist(getWorkingDirectory() .. "\\resource\\AcsWear") then
        createDirectory(getWorkingDirectory() .. "\\resource\\AcsWear")
    end
    if not doesFileExist(ad.image_path) then
        downloadUrlToFile(
            ad.image_link,
            ad.image_path,
            function(id, status, p1, p2)
                if status == dlstatus.STATUSEX_ENDDOWNLOAD then
                    print("visual acs image load +, wait...")
                end
            end
        )
    end
end

function countTotalAccessories()
    local total = 0

    for i = 1, #default_items_data do
        total = total + #default_items_data[i]
    end

    total = total + #armour_items_data

    return total
end

function main()
    while not isSampAvailable() do
        wait(100)
    end
    ad_checkImage()
    lua_thread.create(
        function()
            wait(5000)
            checkForUpdates()
        end
    )
    while sampGetGamestate() ~= 3 do
        wait(0)
    end
    if not doesDirectoryExist(jsonListPath.dir) then
        createDirectory(jsonListPath.dir)
    end
    if not doesFileExist(jsonListPath.file) then
        createList()
        debugmsg("ñîçäàí ôàéë ñ àêñàìè...")
    end
    items_data = jsonRead()

    debugmsg(m_tag .. "îæèäàíèå çàãðóçêè àêñåññóàðîâ...")
    while type(items_data) ~= "table" or type(items_data[1]) ~= "table" or type(items_data[1][1]) ~= "table" do
        wait(0)
        items_data = jsonRead()
    end
    debugmsg(m_tag .. "ôàéë ñ àêñàìè ïðî÷èòàí...")
    sampAddChatMessage(m_tag .. "Çàãðóæåí!", 0xFF00deff)
    sampAddChatMessage("{00deff} {FFFFFF}Àâòîð: {00deff}DyLllA", 0xFFFFFFFF)
    sampAddChatMessage("{00deff} {FFFFFF}/acs {00deff}- {FFFFFF}Îòêðûòü ìåíþ", 0xFFFFFFFF)
    --sampAddChatMessage("{00deff} {FFFFFF}/acswupdate {00deff}- {FFFFFF}Ïðîâåðèòü îáíîâëåíèÿ", 0xFFFFFFFF)

    logger_playerId.v = select(2, sampGetPlayerIdByCharHandle(PLAYER_PED))
    savedSkin = getCharModel(PLAYER_PED)

    for i = 1, 6 do
        for j = #items_data[i], 1, -1 do
            if items_data[i][j][1] == u8 "Íåò" then
                table.remove(items_data[i], j)
            end
        end
    end

    local armour_path = jsonListPath.dir .. "\\armour.json"
    local f = io.open(armour_path, "r")
    if f then
        local s = f:read("*a")
        f:close()
        local t = decodeJson(s) or {}
        if type(t.armour_items) == "table" then
            armour_items_data = t.armour_items
        end
    end

    for idx, tbl in ipairs(items_data) do
        table.sort(
            tbl,
            function(a, b)
                return a[1] < b[1]
            end
        )
    end

    for i = 1, 6 do
        table.insert(items_data[i], 1, {u8 "Íåò", false})
    end

    firstPrintMessage = ""
    print_text = "             "
    for i = 1, 6 do
        curSelected = selected_slot[i]
        slot_color_tbl = selected_color[i]
        slotmax = #items_data[i] + 1
        print_text =
            print_text ..
            "\n" ..
                "\t\tSlot: " ..
                    i ..
                        ", selected: " ..
                            selected_slot[i] ..
                                ", max: " .. slotmax .. ", color: " .. u8:decode(color_list_data[slot_color_tbl][1])
        if selected_slot[i] > #items_data[i] + 1 then
            selected_slot[i] = selected_slot[i] - 1
            print(
                m_tag ..
                    "[selected > #table], slot " ..
                        i .. " selected changed: from: " .. selected_slot[i] .. ", to: " .. selected_slot[i] - 1
            )
        end
    end

    imgui.Process = false
    window.v = false
    logger.v = false
    if enabled.v then
        apply()
        applyWalkStyle(walkstyle_selected.v)
        applyFightStyle()
    end

    while true do
        wait(0)
        if testCheat("visualacsnoads") then
            ya_blatnoy = not ya_blatnoy
            ini.other.ya_blatnoy = not ya_blatnoy
            save()
        end
        if not ya_blatnoy then
            ad.state.v = window.v
        end
        result, button, list, input = sampHasDialogRespond(ad.dialogId)
        if result then
            if button == 1 then
                os.execute('explorer "' .. ad.link .. '"')
            else
                window.v = true
            end
        end

        if logger.r or window.v or window_editor.v then
            imgui.Process = true
        else
            imgui.Process = false
        end

        if skin_rollerFix.v then
            rollerFix()
        end

        if skin_NormalSkinsTurn.v then
            CPed = getCharPointer(PLAYER_PED)
            memory.write(CPed + 0x560, 1089470464, 4, 0)
        end
    end
end

function applyRandomSet()
    math.randomseed(os.clock() * 100000000000)

    local previous_slots = {}
    for i = 1, 6 do
        previous_slots[i] = selected_slot[i]
    end

    for i = 1, 6 do
        if #items_data[i] > 1 then
            selected_slot[i] = math.random(2, #items_data[i])
        else
            selected_slot[i] = 1
        end
    end

    if #armour_items > 1 then
        armour_selected.v = math.random(1, #armour_items - 1)
    else
        armour_selected.v = 0
    end

    apply()
    save()

    sampAddChatMessage(m_tag .. "Ñëó÷àéíûé íàáîð àêñåññóàðîâ ïðèìåíåí!", 0xFF00deff)
end

function drawEditorWindow()
    local resX, resY = getScreenResolution()
    local winEdSizeX, winEdSizeY = 430, 560
    imgui.SetNextWindowPos(imgui.ImVec2(5, resY / 2 - winEdSizeY / 2), imgui.Cond.FirstUseEver)
    imgui.SetNextWindowSize(imgui.ImVec2(winEdSizeX, winEdSizeY), imgui.Cond.FirstUseEver)
    imgui.Begin(u8 "Ðåäàêòîð ïîëîæåíèÿ, ïîâîðîòà è ðàçìåðà", window_editor, imgui.WindowFlags.NoResize)

    imgui.PushItemWidth(430 - 10 - 90)
    imgui.Text(u8 "Ïðåäìåò: ")
    imgui.SameLine()
    imgui.SetCursorPosX(90)
    if imgui.Combo("##editor_item_combo", editor_item, editor_item_combo, -1) then
        if editor_item.v ~= 0 then
            if editor_item.v <= 6 then
                local sel = selected_slot[editor_item.v]
                if sel ~= 1 then
                    editor_posX.v = items_data[editor_item.v][sel][4]
                    editor_posY.v = items_data[editor_item.v][sel][5]
                    editor_posZ.v = items_data[editor_item.v][sel][6]

                    editor_rotX.v = items_data[editor_item.v][sel][7] or 0
                    editor_rotY.v = items_data[editor_item.v][sel][8] or 0
                    editor_rotZ.v = items_data[editor_item.v][sel][9] or 0

                    editor_oldX.v = items_data[editor_item.v][sel][4]
                    editor_oldY.v = items_data[editor_item.v][sel][5]
                    editor_oldZ.v = items_data[editor_item.v][sel][6]

                    editor_oldRotX.v = items_data[editor_item.v][sel][7] or 0
                    editor_oldRotY.v = items_data[editor_item.v][sel][8] or 0
                    editor_oldRotZ.v = items_data[editor_item.v][sel][9] or 0

                    editor_sizeX.v = items_data[editor_item.v][sel][10] or 1.0
                    editor_sizeY.v = items_data[editor_item.v][sel][11] or 1.0
                    editor_sizeZ.v = items_data[editor_item.v][sel][12] or 1.0

                    editor_oldSizeX.v = items_data[editor_item.v][sel][10] or 1.0
                    editor_oldSizeY.v = items_data[editor_item.v][sel][11] or 1.0
                    editor_oldSizeZ.v = items_data[editor_item.v][sel][12] or 1.0
                else
                    editor_posX.v = 0
                    editor_posY.v = 0
                    editor_posZ.v = 0
                    editor_rotX.v = 0
                    editor_rotY.v = 0
                    editor_rotZ.v = 0
                    editor_sizeX.v = 1.0
                    editor_sizeY.v = 1.0
                    editor_sizeZ.v = 1.0
                end
            elseif editor_item.v == 7 then
                if armour_selected.v ~= 0 then
                    local sel = armour_selected.v
                    editor_posX.v = armour_items_data[sel][4]
                    editor_posY.v = armour_items_data[sel][5]
                    editor_posZ.v = armour_items_data[sel][6]

                    editor_rotX.v = armour_items_data[sel][7] or 0
                    editor_rotY.v = armour_items_data[sel][8] or 0
                    editor_rotZ.v = armour_items_data[sel][9] or 0

                    editor_oldX.v = armour_items_data[sel][4]
                    editor_oldY.v = armour_items_data[sel][5]
                    editor_oldZ.v = armour_items_data[sel][6]

                    editor_oldRotX.v = armour_items_data[sel][7] or 0
                    editor_oldRotY.v = armour_items_data[sel][8] or 0
                    editor_oldRotZ.v = armour_items_data[sel][9] or 0

                    editor_sizeX.v = armour_items_data[sel][10] or 1.0
                    editor_sizeY.v = armour_items_data[sel][11] or 1.0
                    editor_sizeZ.v = armour_items_data[sel][12] or 1.0

                    editor_oldSizeX.v = armour_items_data[sel][10] or 1.0
                    editor_oldSizeY.v = armour_items_data[sel][11] or 1.0
                    editor_oldSizeZ.v = armour_items_data[sel][12] or 1.0
                else
                    editor_posX.v = 0
                    editor_posY.v = 0
                    editor_posZ.v = 0
                    editor_rotX.v = 0
                    editor_rotY.v = 0
                    editor_rotZ.v = 0
                    editor_sizeX.v = 1.0
                    editor_sizeY.v = 1.0
                    editor_sizeZ.v = 1.0
                end
            end
        else
            editor_posX.v = 0
            editor_posY.v = 0
            editor_posZ.v = 0
            editor_rotX.v = 0
            editor_rotY.v = 0
            editor_rotZ.v = 0
            editor_sizeX.v = 1.0
            editor_sizeY.v = 1.0
            editor_sizeZ.v = 1.0
        end
    end
    imgui.PopItemWidth()

    imgui.Spacing()
    imgui.Separator()
    imgui.Spacing()

    imgui.PushItemWidth(430 - 10 - 24)

    local canEdit = false
    local itemType = ""
    local selIndex = 0

    if editor_item.v ~= 0 then
        if editor_item.v <= 6 then
            selIndex = selected_slot[editor_item.v]
            if selIndex ~= 1 then
                canEdit = true
                itemType = "accessory"
            end
        elseif editor_item.v == 7 then
            if armour_selected.v ~= 0 then
                canEdit = true
                itemType = "armour"
                selIndex = armour_selected.v
            end
        end
    end

    if canEdit then
        imgui.Text(u8 "Ïîçèöèÿ:")

        imgui.Text(u8 "X: ")
        imgui.SameLine()
        imgui.SetCursorPosX(24)
        imgui.PushItemWidth(180)
        if imgui.InputFloat("##input_posX", editor_posX, 0.01, 0.1, "%.3f") then
            editor_posX.v = math.max(-2.0, math.min(editor_posX.v, 2.0))
            if itemType == "accessory" then
                items_data[editor_item.v][selIndex][4] = editor_posX.v
            else
                armour_items_data[selIndex][4] = editor_posX.v
            end
            apply()
        end
        imgui.SameLine()
        if imgui.SliderFloat("##posX", editor_posX, -2, 2, "%.3f") then
            if itemType == "accessory" then
                items_data[editor_item.v][selIndex][4] = editor_posX.v
            else
                armour_items_data[selIndex][4] = editor_posX.v
            end
            apply()
        end

        imgui.Text(u8 "Y: ")
        imgui.SameLine()
        imgui.SetCursorPosX(24)
        if imgui.InputFloat("##input_posY", editor_posY, 0.01, 0.1, "%.3f") then
            editor_posY.v = math.max(-2.0, math.min(editor_posY.v, 2.0))
            if itemType == "accessory" then
                items_data[editor_item.v][selIndex][5] = editor_posY.v
            else
                armour_items_data[selIndex][5] = editor_posY.v
            end
            apply()
        end
        imgui.SameLine()
        if imgui.SliderFloat("##posY", editor_posY, -2, 2, "%.3f") then
            if itemType == "accessory" then
                items_data[editor_item.v][selIndex][5] = editor_posY.v
            else
                armour_items_data[selIndex][5] = editor_posY.v
            end
            apply()
        end

        imgui.Text(u8 "Z: ")
        imgui.SameLine()
        imgui.SetCursorPosX(24)
        if imgui.InputFloat("##input_posZ", editor_posZ, 0.01, 0.1, "%.3f") then
            editor_posZ.v = math.max(-2.0, math.min(editor_posZ.v, 2.0))
            if itemType == "accessory" then
                items_data[editor_item.v][selIndex][6] = editor_posZ.v
            else
                armour_items_data[selIndex][6] = editor_posZ.v
            end
            apply()
        end
        imgui.SameLine()
        if imgui.SliderFloat("##posZ", editor_posZ, -2, 2, "%.3f") then
            if itemType == "accessory" then
                items_data[editor_item.v][selIndex][6] = editor_posZ.v
            else
                armour_items_data[selIndex][6] = editor_posZ.v
            end
            apply()
        end
        imgui.PopItemWidth()

        imgui.Spacing()
        imgui.Separator()
        imgui.Spacing()

        imgui.Text(u8 "Ïîâîðîòû:")

        imgui.Text(u8 "X: ")
        imgui.SameLine()
        imgui.SetCursorPosX(24)
        imgui.PushItemWidth(180)
        if imgui.InputFloat("##input_rotX", editor_rotX, 1.0, 5.0, "%.1f") then
            editor_rotX.v = editor_rotX.v % 360
            if itemType == "accessory" then
                items_data[editor_item.v][selIndex][7] = editor_rotX.v
            else
                armour_items_data[selIndex][7] = editor_rotX.v
            end
            apply()
        end
        imgui.SameLine()
        if imgui.SliderFloat("##rotX", editor_rotX, 0, 360, "%.1f") then
            if itemType == "accessory" then
                items_data[editor_item.v][selIndex][7] = editor_rotX.v
            else
                armour_items_data[selIndex][7] = editor_rotX.v
            end
            apply()
        end

        imgui.Text(u8 "Y: ")
        imgui.SameLine()
        imgui.SetCursorPosX(24)
        if imgui.InputFloat("##input_rotY", editor_rotY, 1.0, 5.0, "%.1f") then
            editor_rotY.v = editor_rotY.v % 360
            if itemType == "accessory" then
                items_data[editor_item.v][selIndex][8] = editor_rotY.v
            else
                armour_items_data[selIndex][8] = editor_rotY.v
            end
            apply()
        end
        imgui.SameLine()
        if imgui.SliderFloat("##rotY", editor_rotY, 0, 360, "%.1f") then
            if itemType == "accessory" then
                items_data[editor_item.v][selIndex][8] = editor_rotY.v
            else
                armour_items_data[selIndex][8] = editor_rotY.v
            end
            apply()
        end

        imgui.Text(u8 "Z: ")
        imgui.SameLine()
        imgui.SetCursorPosX(24)
        if imgui.InputFloat("##input_rotZ", editor_rotZ, 1.0, 5.0, "%.1f") then
            editor_rotZ.v = editor_rotZ.v % 360
            if itemType == "accessory" then
                items_data[editor_item.v][selIndex][9] = editor_rotZ.v
            else
                armour_items_data[selIndex][9] = editor_rotZ.v
            end
            apply()
        end
        imgui.SameLine()
        if imgui.SliderFloat("##rotZ", editor_rotZ, 0, 360, "%.1f") then
            if itemType == "accessory" then
                items_data[editor_item.v][selIndex][9] = editor_rotZ.v
            else
                armour_items_data[selIndex][9] = editor_rotZ.v
            end
            apply()
        end
        imgui.PopItemWidth()

        imgui.Spacing()
        imgui.Separator()
        imgui.Spacing()

        imgui.Text(u8 "Ðàçìåð:")

        imgui.Text(u8 "X: ")
        imgui.SameLine()
        imgui.SetCursorPosX(24)
        imgui.PushItemWidth(180)
        if imgui.InputFloat("##input_sizeX", editor_sizeX, 0.01, 0.1, "%.3f") then
            editor_sizeX.v = math.max(0.001, math.min(editor_sizeX.v, 10.0))
            if itemType == "accessory" then
                items_data[editor_item.v][selIndex][10] = editor_sizeX.v
            else
                armour_items_data[selIndex][10] = editor_sizeX.v
            end
            apply()
        end
        imgui.SameLine()
        if imgui.SliderFloat("##sizeX", editor_sizeX, 0.001, 10.0, "%.3f") then
            if itemType == "accessory" then
                items_data[editor_item.v][selIndex][10] = editor_sizeX.v
            else
                armour_items_data[selIndex][10] = editor_sizeX.v
            end
            apply()
        end

        imgui.Text(u8 "Y: ")
        imgui.SameLine()
        imgui.SetCursorPosX(24)
        if imgui.InputFloat("##input_sizeY", editor_sizeY, 0.01, 0.1, "%.3f") then
            editor_sizeY.v = math.max(0.001, math.min(editor_sizeY.v, 10.0))
            if itemType == "accessory" then
                items_data[editor_item.v][selIndex][11] = editor_sizeY.v
            else
                armour_items_data[selIndex][11] = editor_sizeY.v
            end
            apply()
        end
        imgui.SameLine()
        if imgui.SliderFloat("##sizeY", editor_sizeY, 0.001, 10.0, "%.3f") then
            if itemType == "accessory" then
                items_data[editor_item.v][selIndex][11] = editor_sizeY.v
            else
                armour_items_data[selIndex][11] = editor_sizeY.v
            end
            apply()
        end

        imgui.Text(u8 "Z: ")
        imgui.SameLine()
        imgui.SetCursorPosX(24)
        if imgui.InputFloat("##input_sizeZ", editor_sizeZ, 0.01, 0.1, "%.3f") then
            editor_sizeZ.v = math.max(0.001, math.min(editor_sizeZ.v, 10.0))
            if itemType == "accessory" then
                items_data[editor_item.v][selIndex][12] = editor_sizeZ.v
            else
                armour_items_data[selIndex][12] = editor_sizeZ.v
            end
            apply()
        end
        imgui.SameLine()
        if imgui.SliderFloat("##sizeZ", editor_sizeZ, 0.001, 10.0, "%.3f") then
            if itemType == "accessory" then
                items_data[editor_item.v][selIndex][12] = editor_sizeZ.v
            else
                armour_items_data[selIndex][12] = editor_sizeZ.v
            end
            apply()
        end
        imgui.PopItemWidth()
    else
        if editor_item.v == 7 and armour_selected.v == 0 then
            imgui.CenterTextColoredRGB("Ñíà÷àëà âûáåðèòå áðîíèê â ãëàâíîì ìåíþ!")
        else
            imgui.CenterTextColoredRGB("Âûáåðèòå ïðåäìåò /\\")
        end
    end
    imgui.PopItemWidth()

    imgui.Spacing()
    imgui.Separator()
    imgui.Spacing()

    imgui.SetCursorPosX(5)
    if imgui.Button(u8 "Ñîõðàíèòü íàñòðîéêè äëÿ ýòîãî ïðåäìåòà", imgui.ImVec2(winEdSizeX - 10, 24)) then
        if editor_item.v <= 6 then
            local sel = selected_slot[editor_item.v]
            items_data[editor_item.v][sel][4] = editor_posX.v
            items_data[editor_item.v][sel][5] = editor_posY.v
            items_data[editor_item.v][sel][6] = editor_posZ.v
            items_data[editor_item.v][sel][7] = editor_rotX.v
            items_data[editor_item.v][sel][8] = editor_rotY.v
            items_data[editor_item.v][sel][9] = editor_rotZ.v
            items_data[editor_item.v][sel][10] = editor_sizeX.v
            items_data[editor_item.v][sel][11] = editor_sizeY.v
            items_data[editor_item.v][sel][12] = editor_sizeZ.v
        elseif editor_item.v == 7 then
            local sel = armour_selected.v
            armour_items_data[sel][4] = editor_posX.v
            armour_items_data[sel][5] = editor_posY.v
            armour_items_data[sel][6] = editor_posZ.v
            armour_items_data[sel][7] = editor_rotX.v
            armour_items_data[sel][8] = editor_rotY.v
            armour_items_data[sel][9] = editor_rotZ.v
            armour_items_data[sel][10] = editor_sizeX.v
            armour_items_data[sel][11] = editor_sizeY.v
            armour_items_data[sel][12] = editor_sizeZ.v

            local armour_data = {armour_items = armour_items_data}
            local f = io.open(jsonListPath.dir .. "\\armour.json", "w+")
            if f then
                f:write(encodeJson(armour_data))
                f:close()
            end
        end

        jsonSave(items_data)
        window_editor.v = false
    end

    imgui.SetCursorPosX(5)
    if imgui.Button(u8 "Ñáðîñèòü íàñòðîéêè äëÿ ýòîãî ïðåäìåòà", imgui.ImVec2(winEdSizeX - 10, 24)) then
        if editor_item.v <= 6 then
            local sel = selected_slot[editor_item.v]
            items_data[editor_item.v][sel][4] = editor_oldX.v
            items_data[editor_item.v][sel][5] = editor_oldY.v
            items_data[editor_item.v][sel][6] = editor_oldZ.v
            items_data[editor_item.v][sel][7] = editor_oldRotX.v
            items_data[editor_item.v][sel][8] = editor_oldRotY.v
            items_data[editor_item.v][sel][9] = editor_oldRotZ.v
            items_data[editor_item.v][sel][10] = editor_oldSizeX.v
            items_data[editor_item.v][sel][11] = editor_oldSizeY.v
            items_data[editor_item.v][sel][12] = editor_oldSizeZ.v
        elseif editor_item.v == 7 then
            local sel = armour_selected.v
            armour_items_data[sel][4] = editor_oldX.v
            armour_items_data[sel][5] = editor_oldY.v
            armour_items_data[sel][6] = editor_oldZ.v
            armour_items_data[sel][7] = editor_oldRotX.v
            armour_items_data[sel][8] = editor_oldRotY.v
            armour_items_data[sel][9] = editor_oldRotZ.v
            armour_items_data[sel][10] = editor_oldSizeX.v
            armour_items_data[sel][11] = editor_oldSizeY.v
            armour_items_data[sel][12] = editor_oldSizeZ.v
        end
        window_editor.v = false
    end

    imgui.End()
end

function imgui.OnDrawFrame()
    resX, resY = getScreenResolution()
    if ad.state.v then
        sizeMinus = 80
        imgui.SetNextWindowPos(
            imgui.ImVec2(ad.posX + sizeMinus / 2, ad.posY + ad.mainWindowSize + ad.vertical_offset),
            imgui.Cond.Always
        )
        imgui.SetNextWindowSize(imgui.ImVec2(ad.sizeX - sizeMinus, ad.sizeY), imgui.Cond.Always)
        imgui.Begin("ad", ad.state, imgui.WindowFlags.NoResize + imgui.WindowFlags.NoTitleBar)

        imgui.CenterTextColoredRGB("ÌÎÉ ÒÃ ÊÀÍÀË")
        if ad.IMAGE ~= nil then
            imgui.SetCursorPos(imgui.ImVec2(0, 0))
            local imageSize = {x = ad.sizeX - 50, y = ad.sizeY}
            imgui.Image(ad.IMAGE, imgui.ImVec2(ad.sizeX - sizeMinus, ad.sizeY))
            if imgui.IsItemClicked() then
                window.v = false
                sampShowDialog(
                    ad.dialogId,
                    "ÂÊ | By DyLllA",
                    '{ffffff}Âû õîòèòå ïåðåéòè ïî ññûëêå "{698cc7}' .. ad.link .. '{ffffff}"?',
                    "Ïåðåéòè",
                    "Íåò",
                    0
                )
            end
        else
            ad.IMAGE = imgui.CreateTextureFromFile(ad.image_path)
        end

        imgui.End()
    end
    if logger.v then
        imgui.SetNextWindowPos(imgui.ImVec2(250, 250), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowSize(imgui.ImVec2(400, 250), imgui.Cond.FirstUseEver)
        imgui.Begin("logger", logger, imgui.WindowFlags.NoResize)

        imgui.Text("Player ID: ")
        imgui.SameLine()
        imgui.InputInt("##log_pid", logger_playerId)

        imgui.Text("Slot 0:")
        imgui.SameLine()
        imgui.InputText("##llog_slot0", logger_slot0, imgui.InputTextFlags.ReadOnly)
        imgui.Text("Slot 1:")
        imgui.SameLine()
        imgui.InputText("##llog_slot1", logger_slot1, imgui.InputTextFlags.ReadOnly)
        imgui.Text("Slot 2:")
        imgui.SameLine()
        imgui.InputText("##llog_slot2", logger_slot2, imgui.InputTextFlags.ReadOnly)
        imgui.Text("Slot 3:")
        imgui.SameLine()
        imgui.InputText("##llog_slot3", logger_slot3, imgui.InputTextFlags.ReadOnly)
        imgui.Text("Slot 4:")
        imgui.SameLine()
        imgui.InputText("##llog_slot4", logger_slot4, imgui.InputTextFlags.ReadOnly)
        imgui.Text("Slot 5:")
        imgui.SameLine()
        imgui.InputText("##llog_slot5", logger_slot5, imgui.InputTextFlags.ReadOnly)

        imgui.End()
    end

    if window.v then
        sizeX, sizeY = 600, 400
        imgui.SetNextWindowPos(imgui.ImVec2(resX / 2 - sizeX / 2, resY / 2 - sizeY / 2), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowSize(imgui.ImVec2(sizeX, sizeY), imgui.Cond.FirstUseEver)
        imgui.Begin(thisScript().name .. " (v." .. thisScript().version .. ")", window, imgui.WindowFlags.NoResize)

        local winpos = imgui.GetWindowPos()
        ad.posX, ad.posY = winpos.x, winpos.y
        ad.sizeX, ad.mainWindowSize = sizeX, sizeY

        imgui.SetCursorPosY(55)
        if imgui.CustomMenu(selector_list, menu_selected, imgui.ImVec2(120, 35), 0.3, true) then
            search.v = ""
        end

        imgui.SetCursorPos(imgui.ImVec2(5, 30))
        if imgui.Checkbox(u8 "Îòîáðàæàòü àêñû", enabled) then
            if not enabled.v then
                for i = 0, 7 do
                    clear(i)
                end
            else
                apply()
            end
            save()
        end

        if window_editor.v then
            drawEditorWindow()
        end

        imgui.SetCursorPos(imgui.ImVec2(475, 36))
        if imgui.Button(u8 "Ñíÿòü âñå", imgui.ImVec2(110, 24)) then
            for i = 0, 6 do
                clear(i)
                selected_slot[i] = 1
            end
            clear(7)
            armour_selected.v = 0
            glow.v = false
            save()
        end

        if menu_selected.v < 7 then
            imgui.SetCursorPos(imgui.ImVec2(162, 30))
            imgui.Text(u8 "Ïîèñê: ")
            imgui.SameLine()
            imgui.PushItemWidth(240)
            imgui.PushStyleColor(imgui.Col.FrameBg, imgui.ImVec4(0.19, 0.22, 0.26, 1))
            imgui.InputText("##search", search)
            imgui.PopStyleColor()
            imgui.PopItemWidth()
            imgui.SetCursorPos(imgui.ImVec2(135, 55))
            imgui.BeginChild("child_content", imgui.ImVec2(300, 312), true)
        else
            imgui.SetCursorPos(imgui.ImVec2(162, 36))
            imgui.BeginChild("child_content", imgui.ImVec2(300, 312), true)
        end

        if menu_selected.v < 7 then
            for i = 1, #items_data do
                if menu_selected.v == i then
                    if string.len(search.v) == 0 then
                        for i2 = 1, #items_data[i] do
                            if imgui.Selectable(items_data[i][i2][1], selected_slot[i] == i2) then
                                selected_slot[i] = i2
                                slot_color_tbl = selected_color[menu_selected.v]
                                slotApply(i - 1, items_data[i][i2], color_list_data[slot_color_tbl])
                                save()
                            end
                        end
                    else
                        for i2 = 1, #items_data[i] do
                            il = string.rlower(u8:decode(items_data[i][i2][1]))
                            sl = string.rlower(u8:decode(search.v))

                            if il:find(sl) then
                                if imgui.Selectable(items_data[i][i2][1], selected_slot[i] == i2) then
                                    selected_slot[i] = i2
                                    slot_color_tbl = selected_color[menu_selected.v]
                                    slotApply(i - 1, items_data[i][i2], color_list_data[slot_color_tbl])
                                    save()
                                end
                            end
                        end
                    end
                end
            end
        elseif menu_selected.v == 7 then
            imgui.PushItemWidth(184)
            imgui.Spacing()
            imgui.Separator()
            imgui.Spacing()
            imgui.Text(u8 "Ñëîò 7 (Áðîíÿ): ")
            imgui.SameLine()
            imgui.SetCursorPosX(110)
            if imgui.Combo("###moneyarmour", armour_selected, armour_items, #armour_items) then
                if armour_selected.v ~= 0 then
                    save()
                    slotApply(7, armour_items_data[armour_selected.v], color_list_data[selected_color_armour.v])
                else
                    save()
                    clear(7)
                end
            end

            if armour_selected.v ~= 0 then
                imgui.Text(u8 "Öâåò áðîíè:")
                imgui.SameLine()
                imgui.SetCursorPosX(105)

                local armour_color_names = {}
                for i, color_data in ipairs(armour_color_list_data) do
                    table.insert(armour_color_names, color_data[1])
                end

                if imgui.Combo("###armourcolor", selected_color_armour, armour_color_names, #armour_color_names) then
                    if armour_selected.v ~= 0 then
                        local color_index = math.max(1, selected_color_armour.v)
                        slotApply(7, armour_items_data[armour_selected.v], armour_color_list_data[color_index])
                    end
                    save()
                end
            end
            if imgui.Checkbox(u8 "Èçìåíÿòü ñòèëü õîäüáû", walkstyle_enabled) then
                if not walkstyle_enabled.v then
                    if changeskin.v then
                        applyPlayerSkin(select(2, sampGetPlayerIdByCharHandle(PLAYER_PED)), skinid.v)
                    else
                        applyPlayerSkin(select(2, sampGetPlayerIdByCharHandle(PLAYER_PED)), savedSkin)
                    end
                    save()
                else
                    applyWalkStyle(walkstyle_selected.v)
                end
            end
            if walkstyle_enabled.v then
                imgui.Text(u8 "Ñòèëü õîäüáû:")
                imgui.SameLine()
                imgui.SetCursorPosX(100)
                if imgui.Combo("##combo_walkstyle", walkstyle_selected, walkstyle_list, #walkstyle_list) then
                    save()
                    applyWalkStyle(walkstyle_selected.v)
                end
            end
            imgui.Text(u8 "Ñòèëü áîÿ:")
            imgui.SameLine()
            imgui.SetCursorPosX(100)
            if imgui.Combo("##combo_fightstyle", fightstyle_selected, fight_list, #fight_list) then
                save()
                applyFightStyle()
            end
            imgui.PopItemWidth()

            if imgui.Checkbox(u8 "Àóðà", glow) then
                if glow.v then
                    slotApply(6, glowEffect_data, false)
                else
                    clear(6)
                end
            end

            imgui.Spacing()
            imgui.Separator()
            imgui.Spacing()

            if imgui.Checkbox(u8 "Èçìåíÿòü ñêèí", changeskin) then
                if changeskin.v then
                    applyPlayerSkin(select(2, sampGetPlayerIdByCharHandle(PLAYER_PED)), skinid.v)
                else
                    applyPlayerSkin(select(2, sampGetPlayerIdByCharHandle(PLAYER_PED)), savedSkin)
                end
                save()
            end
            imgui.SameLine()
            imgui.TextQuestion(
                u8 "Çàéäèòå â êîðíåâóþ ïàïêó ðîäèíû è íàéäèòå òàì ôàéë ped_info.ide îòêðîéòå è ñìîòðèòå àéäèøíèêè"
            )
            if changeskin.v then
                imgui.Text(u8 "Ñêèí:")
                imgui.SameLine()
                imgui.SetCursorPosX(75)
                if imgui.InputInt("##skirdhngudtfjg", skinid) then
                    if skinid.v == -1 then
                        skinid.v = 0
                    elseif skinid.v == 312 then
                        skinid.v = 311
                    end

                    if changeskin.v then
                        applyPlayerSkin(select(2, sampGetPlayerIdByCharHandle(PLAYER_PED)), skinid.v)
                    else
                        applyPlayerSkin(select(2, sampGetPlayerIdByCharHandle(PLAYER_PED)), savedSkin)
                    end
                    save()
                end

                imgui.SetCursorPosX(75)
                if imgui.Button(u8 "Ñêèíû", imgui.ImVec2(150, 24)) then
                    show_popular_skins.v = not show_popular_skins.v
                    popular_skins_search.v = ""
                end
            end
            imgui.Checkbox("RollerFix", skin_rollerFix)
            imgui.SameLine()
            imgui.TextQuestion(u8 "Óäàëåíèå ðàçãîíà ó 92 è 99 ñêèíîâ (by Chapo)")
            imgui.SameLine()
            imgui.Checkbox("NormalSkinsTurn", skin_NormalSkinsTurn)
            imgui.SameLine()
            imgui.TextQuestion(
                u8 "Ôèêñ ðåçêèõ ïîâîðîòîâ ó íåêîòîðûõ ñêèíîâ. (by FYS)\nÏîñëå îòêëþ÷åíèÿ òðåáóåòñÿ ïåðåçàõîä â èãðó!"
            )
        elseif menu_selected.v == 8 then
            imgui.Spacing()
            imgui.Separator()
            imgui.Spacing()

            imgui.TextColored(imgui.ImVec4(0.0, 0.75, 1.0, 1.00), u8 "Îáíîâëåíèÿ ñêðèïòà")

            local currentVersion = tostring(thisScript().version)

            if not updateCheck then
                imgui.Text(u8 "Ñòàòóñ: Ïðîâåðêà...")
            elseif updateAvailable then
                imgui.TextColored(imgui.ImVec4(0.0, 1.0, 0.0, 1.00), u8 "Ñòàòóñ: Äîñòóïíî îáíîâëåíèå!")
                imgui.Text(u8 "Òåêóùàÿ âåðñèÿ: " .. currentVersion)
                imgui.Text(u8 "Íîâàÿ âåðñèÿ: " .. latestVersion)

                if imgui.Button(u8 "Ñëåäè çà îáíîâëåíèÿìè", imgui.ImVec2(270, 30)) then
                    os.execute('start "https://github.com/Tr3Gramma1337/Acs"')
                    --performUpdate()
                end
            else
                imgui.TextColored(imgui.ImVec4(0.0, 1.0, 0.0, 1.00), u8 "Ñòàòóñ: Àêòóàëüíàÿ âåðñèÿa")
                imgui.Text(u8 "Âåðñèÿ: " .. currentVersion)
            end

            imgui.Spacing()

            if imgui.Button(u8 "Ñëåäè çà îáíîâëåíèÿìè", imgui.ImVec2(270, 23)) then
                os.execute('explorer "https://github.com/Tr3Gramma1337/Acs"')
                --checkForUpdates(true)
            end

            if imgui.IsItemHovered() then
                imgui.BeginTooltip()
                imgui.Text(u8 "Ïðîâåðèòü íàëè÷èå îáíîâëåíèé")
                imgui.EndTooltip()
            end

            imgui.Spacing()
            imgui.Separator()
            imgui.Spacing()
            if imgui.Button(u8 "Çàãðóçèòü êîä ïðåñåòà", imgui.ImVec2(270, 24)) then
                imgui.OpenPopup(u8 "Ïðèìåíåíèå ïðåñåòà")
            end
            if imgui.Button(u8 "Ïîëó÷èòü êîä ïðåñåòà", imgui.ImVec2(270, 24)) then
                sampSetChatInputEnabled(true)
                sampSetChatInputText(keyGenerate())
            end
            if imgui.Button(u8 "Ñëó÷àéíûé íàáîð àêñåññóàðîâ", imgui.ImVec2(270, 24)) then
                applyRandomSet()
            end
            if imgui.IsItemHovered() then
                imgui.BeginTooltip()
                imgui.Text(u8 "Ïðèìåíèòü ñëó÷àéíûå àêñåññóàðû âî âñå ñëîòû")
                imgui.EndTooltip()
            end
            if imgui.CollapsingHeader(u8 "Ñîõðàíåííûå ïðåñåòû") then
                for i = 1, #savedPresets do
                    imgui.Text(tostring(i) .. ": ")
                    imgui.SameLine()
                    imgui.SetCursorPosX(27)
                    if string.len(savedPresets[i]) > 0 then
                        if imgui.Button(u8 "Çàãðóçèòü##" .. tostring(i), imgui.ImVec2(75, 25)) then
                            if not keyLoad(savedPresets[i]) then
                                sampAddChatMessage(m_tag .. "íåâåðíûé êîä!", -1)
                            end
                            save()
                        end
                        imgui.SameLine()
                        if imgui.Button(u8 "Kîä", imgui.ImVec2(50, 25)) then
                            setClipboardText(savedPresets[i])
                            sampSetChatInputEnabled(true)
                            sampSetChatInputText(savedPresets[i])
                        end
                        if imgui.IsItemHovered() then
                            imgui.BeginTooltip()
                            imgui.CenterTextColoredRGB(
                                "Êîä: " ..
                                    savedPresets[i] ..
                                        "\nÍàæìè ËÊÌ ÷òî ñêîïèðîâàòü êîä â áóôåð îáìåíà è âûâåñòè åãî â êîíñîëü\n÷òî áû åãî âñòàâèòü íàæìèòå CTRL + V"
                            )
                            imgui.EndTooltip()
                        end
                        imgui.SameLine()
                        if imgui.Button(u8 "Óäàëèòü##" .. tostring(i), imgui.ImVec2(75, 25)) then
                            savedPresets[i] = ""
                        end
                    else
                        if imgui.Button(u8 "Ñîõðàíèòü##" .. tostring(i), imgui.ImVec2(150, 25)) then
                            savedPresets[i] = keyGenerate()
                            save()
                        end
                    end
                end
                imgui.Separator()
                imgui.Spacing()
            end

            imgui.SetCursorPosX(5)
            if imgui.Button(u8 "Îòêðûòü ðåäàêòîð àêñåññóàðîâ", imgui.ImVec2(275, 40)) then
                editor_item_combo = {u8 "Íå âûáðàíî"}
                for i = 1, 6 do
                    local sel = selected_slot[i]

                    table.insert(editor_item_combo, u8 "Ñëîò #" .. tostring(i) .. " - " .. items_data[i][sel][1])
                end
                table.insert(editor_item_combo, u8 "Ñëîò #7 - Áðîíåæèëåò")
                window_editor.v = not window_editor.v
            end
        end

        if imgui.BeginPopupModal(u8 "Ïðèìåíåíèå ïðåñåòà", _, imgui.WindowFlags.NoTitleBar + imgui.WindowFlags.NoResize) then
            if isPresetKeyValid(loadpresetbycodeinpopup.v) then
                imgui.SetWindowSize(imgui.ImVec2(300, 250))
            else
                imgui.SetWindowSize(imgui.ImVec2(300, 250))
            end
            imgui.CenterTextColoredRGB("Ââåäèòå êîä ïðåñåòà â ïîëå ââîäà")
            imgui.SetCursorPosX(5)
            imgui.PushItemWidth(290)
            imgui.InputText("##LOADPRESET_BY_CODE", loadpresetbycodeinpopup)
            imgui.PopItemWidth()

            imgui.SetCursorPosX(5)
            imgui.BeginChild("CHILD:LOAD:CHANGESINSLOTS", imgui.ImVec2(290, 120), true)
            if isPresetKeyValid(loadpresetbycodeinpopup.v) then
                NEWSLOTS = getKeyItemList(loadpresetbycodeinpopup.v)

                for i = 1, 6 do
                    cursel = selected_slot[i]
                    newsel = tonumber(NEWSLOTS[i])
                    imgui.Text(tostring(i) .. ". " .. items_data[i][cursel][1] .. " -> " .. items_data[i][newsel][1])
                end

                local current_armour = armour_selected.v
                local new_armour = tonumber(NEWSLOTS[7])

                if current_armour == 0 then
                    current_armour_name = u8 "Íåò"
                else
                    current_armour_name = armour_items_data[current_armour][1]
                end
                if new_armour == 0 then
                    new_armour_name = u8 "Íåò"
                else
                    new_armour_name = armour_items_data[new_armour][1]
                end
                imgui.Text(u8 "7. Áðîíåæèëåò: " .. current_armour_name .. " -> " .. new_armour_name)

                imgui.Text(u8 "Skin: " .. skinid.v .. " -> " .. NEWSLOTS[9])
            else
                imgui.CenterTextColoredRGB(
                    "{00deff}ÎØÈÁÊÀ\n{ffffff}Íåâåðíûé êîä\nêîä äîëæíí áûòü â ôîðìàòå:\nx:x;x:x;x:x;x:x;x:x;x:x;x;x;x"
                )
            end
            imgui.EndChild()

            imgui.SetCursorPosX(5)
            if imgui.Button(u8 "Ïðèìåíèòü", imgui.ImVec2(290, 20)) then
                keyLoad(loadpresetbycodeinpopup.v)
                save()
                imgui.CloseCurrentPopup()
            end
            imgui.SetCursorPosX(5)
            if imgui.Button(u8 "Çàêðûòü", imgui.ImVec2(290, 20)) then
                keyLoad(loadpresetbycodeinpopup.v)
                imgui.CloseCurrentPopup()
            end
            imgui.EndPopup()
        end

        imgui.EndChild()

        if menu_selected.v < 7 then
            imgui.SetCursorPos(imgui.ImVec2(475, 66))
            imgui.BeginChild("child_color", imgui.ImVec2(110, 282), true)
            for i = 1, #color_list_data do
                if imgui.Selectable(color_list_data[i][1], selected_color[menu_selected.v] == i) then
                    selected_color[menu_selected.v] = i
                    slot_color_tbl = selected_color[menu_selected.v]

                    sad = selected_slot[menu_selected.v]
                    slotminus = menu_selected.v
                    save()
                    slotApply(menu_selected.v - 1, items_data[menu_selected.v][sad], color_list_data[slot_color_tbl])
                end
            end
            imgui.EndChild()
        else
            imgui.SetCursorPos(imgui.ImVec2(475, 68))

            if imgui.InvisibleButton("button1", imgui.ImVec2(110, 88)) then
                os.execute('explorer "https://rodina-info.ru/"')
            end

            local button_color
            if imgui.IsItemActive() then
                button_color = imgui.GetStyle().Colors[imgui.Col.ButtonActive]
            elseif imgui.IsItemHovered() then
                button_color = imgui.GetStyle().Colors[imgui.Col.ButtonHovered]
            else
                button_color = imgui.GetStyle().Colors[imgui.Col.Button]
            end

            imgui.GetWindowDrawList():AddRectFilled(
                imgui.GetItemRectMin(),
                imgui.GetItemRectMax(),
                imgui.GetColorU32(button_color),
                imgui.GetStyle().FrameRounding
            )

            imgui.GetWindowDrawList():AddRect(
                imgui.GetItemRectMin(),
                imgui.GetItemRectMax(),
                imgui.GetColorU32(imgui.Col.Border),
                imgui.GetStyle().FrameRounding
            )

            local text_pos = imgui.GetItemRectMin()
            local text1 = u8 "Rodina"
            local text2 = u8 "Items"

            local text_size1 = imgui.CalcTextSize(text1)
            local text_size2 = imgui.CalcTextSize(text2)

            imgui.SetCursorScreenPos(
                imgui.ImVec2(text_pos.x + (110 - text_size1.x) / 2, text_pos.y + (88 - text_size1.y - text_size2.y) / 2)
            )
            imgui.Text(text1)

            imgui.SetCursorScreenPos(
                imgui.ImVec2(text_pos.x + (110 - text_size2.x) / 2, text_pos.y + (88 - text_size2.y) / 2 + text_size1.y)
            )
            imgui.Text(text2)

            imgui.SetCursorPos(imgui.ImVec2(475, 162))
            if imgui.Button(u8 "Âûãðóçèòü", imgui.ImVec2(110, 88)) then
                window.v = false
                showCursor(false)
                thisScript():unload()
            end

            imgui.SetCursorPos(imgui.ImVec2(475, 256))
            if imgui.Button(u8 "Ïåðåçàãðóçèòü", imgui.ImVec2(110, 88)) then
                window.v = false
                showCursor(false)
                thisScript():reload()
            end
        end

        imgui.SetCursorPos(imgui.ImVec2(25, 360))
        imgui.Text(u8 "")
        imgui.SameLine()
        imgui.TextColored(imgui.ImVec4(0.0, 0.75, 1.0, 1.00), "DyLllA")

        if imgui.IsItemClicked(0) then
            imgui.OpenPopup(u8 "By DyLllA")
        end
        if imgui.IsItemHovered() then
            imgui.BeginTooltip()
            imgui.Text(u8 "Íàæìèòå äëÿ êîíòàêòîâ")
            imgui.EndTooltip()
        end

        if
            imgui.BeginPopupModal(
                u8 "By DyLllA",
                imgui.WindowFlags.NoCollapse + imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoResize
            )
         then
            imgui.SetWindowSize(imgui.ImVec2(300, 200))

            imgui.SetCursorPosX(100, 30)
            imgui.TextColored(imgui.ImVec4(0.1, 0.8, 1.0, 1.0), u8 "Èíôîðìàöèÿ:")
            imgui.Separator()
            imgui.Spacing()

            imgui.SetCursorPosX(20)
            if imgui.Button(u8 "VK", imgui.ImVec2(80, 40)) then
                os.execute('explorer "https://vk.com/bushidojoo"')
            end
            imgui.SameLine()
            if imgui.Button(u8 "Telegram", imgui.ImVec2(80, 40)) then
                sampAddChatMessage(u8'not open', -1)
            end
            imgui.SameLine()
            if imgui.Button(u8 "Òåìà BH", imgui.ImVec2(80, 40)) then
                sampAddChatMessage(u8'not open', -1)
            end

            imgui.Spacing()
            imgui.Separator()
            imgui.Spacing()

            imgui.SetCursorPosX(50)
            imgui.TextColored(imgui.ImVec4(0.7, 0.7, 0.7, 1.0), u8 "DyLllA")
            imgui.Spacing()

            imgui.SetCursorPosX(100)
            if imgui.Button(u8 "Çàêðûòü", imgui.ImVec2(100, 30)) then
                imgui.CloseCurrentPopup()
            end

            imgui.EndPopup()
        end

        imgui.SetCursorPos(imgui.ImVec2(35, 375))
        imgui.Text(u8 "Âåðñèÿ:")
        imgui.SameLine()
        imgui.TextColored(imgui.ImVec4(1, 0, 0.3, 1.00), thisScript().version)

        imgui.SetCursorPos(imgui.ImVec2(475, 370))
        imgui.Text(u8 "Àêñîâ:")
        imgui.SameLine()
        imgui.TextColored(imgui.ImVec4(0, 1, 0.5, 1.00), tostring(countTotalAccessories()))

        imgui.End()
    end

    if show_popular_skins.v then
        imgui.SetNextWindowSize(imgui.ImVec2(500, 400), imgui.Cond.FirstUseEver)
        imgui.SetNextWindowPos(imgui.ImVec2(resX / 3 - 500, resY / 3 - 20), imgui.Cond.FirstUseEver)
        imgui.Begin(u8("Ñêèíû"), show_popular_skins, imgui.WindowFlags.NoResize)

        imgui.Text(u8("Âûáåðèòå ñêèí         (Ñêèíû áóäóò ïåðåîäè÷åñêè Îáíîâëÿòñÿ)"))

        imgui.Text(u8("Ïîèñê:"))
        imgui.SameLine()
        imgui.PushItemWidth(300)
        imgui.InputText("##popular_skins_search", popular_skins_search)
        imgui.PopItemWidth()

        imgui.Separator()

        local filtered_skins = {}
        local search_text = string.rlower(u8:decode(popular_skins_search.v))

        if string.len(search_text) > 0 then
            for i, skin in ipairs(popular_skins) do
                local skin_name = string.rlower(u8:decode(skin.name))
                if skin_name:find(search_text) or tostring(skin.id):find(search_text) then
                    table.insert(filtered_skins, skin)
                end
            end
        else
            filtered_skins = popular_skins
        end

        local button_size = imgui.ImVec2(230, 35)
        local items_per_row = 2
        local current_item = 0
        local window_width = imgui.GetWindowWidth()

        local available_width = window_width - imgui.GetStyle().WindowPadding.x * 2
        local total_buttons_width = button_size.x * items_per_row + imgui.GetStyle().ItemSpacing.x * (items_per_row - 1)
        local start_pos_x = (available_width - total_buttons_width) / 2 + imgui.GetStyle().WindowPadding.x

        imgui.Text(u8("Íàéäåíî: ") .. tostring(#filtered_skins) .. u8(" èç ") .. tostring(#popular_skins))
        imgui.Separator()

        for i, skin in ipairs(filtered_skins) do
            if current_item % items_per_row == 0 then
                imgui.SetCursorPosX(start_pos_x)
            else
                imgui.SameLine()
            end

            local is_selected = (skinid.v == skin.id)
            if is_selected then
                imgui.PushStyleColor(imgui.Col.Button, imgui.ImVec4(0.0, 0.5, 1.0, 0.7))
                imgui.PushStyleColor(imgui.Col.ButtonHovered, imgui.ImVec4(0.2, 0.7, 1.0, 0.8))
                imgui.PushStyleColor(imgui.Col.ButtonActive, imgui.ImVec4(0.0, 0.6, 0.5, 0.9))
            end

            if imgui.Button(skin.name .. " (ID: " .. skin.id .. ")", button_size) then
                skinid.v = skin.id
                if changeskin.v then
                    applyPlayerSkin(select(2, sampGetPlayerIdByCharHandle(PLAYER_PED)), skinid.v)
                end
                save()
            end

            if is_selected then
                imgui.PopStyleColor(3)
            end

            current_item = current_item + 1

            if current_item % items_per_row == 0 and current_item < #filtered_skins then
                imgui.Dummy(imgui.ImVec2(0, 8))
            end
        end

        if #filtered_skins % items_per_row ~= 0 then
            imgui.Dummy(imgui.ImVec2(0, 8))
        end

        imgui.Separator()
        imgui.Dummy(imgui.ImVec2(0, 15))

        local button_width = 150
        local close_button_width = 80
        local total_buttons_width = button_width + close_button_width + imgui.GetStyle().ItemSpacing.x
        local buttons_start_x = (window_width - total_buttons_width) / 2

        imgui.SetCursorPosX(buttons_start_x)

        if imgui.Button(u8("Ïðèìåíèòü è çàêðûòü"), imgui.ImVec2(button_width, 25)) then
            show_popular_skins.v = false
        end

        imgui.SameLine()

        if imgui.Button(u8("Çàêðûòü"), imgui.ImVec2(close_button_width, 25)) then
            show_popular_skins.v = false
        end

        imgui.End()
    end
end

function keyGenerate()
    key = ""
    for i = 1, 6 do
        key = key .. selected_slot[i] .. ":" .. selected_color[i] .. ";"
    end
    key = key .. armour_selected.v .. ":" .. selected_color_armour.v .. ";"
    key = key .. skinid.v .. ";" .. fightstyle_selected.v .. ";" .. walkstyle_selected.v
    return key
end

function isPresetKeyValid(key)
    return key:find("(.+):(.+);(.+):(.+);(.+):(.+);(.+):(.+);(.+):(.+);(.+):(.+);(.+):(.+);(.+);(.+);(.+)")
end

function getKeyItemList(key)
    if key:find("(.+):(.+);(.+):(.+);(.+):(.+);(.+):(.+);(.+):(.+);(.+):(.+);(.+):(.+);(.+);(.+);(.+)") then
        s1, c1, s2, c2, s3, c3, s4, c4, s5, c5, s6, c6, armour, armour_color, skin, fight, walk =
            key:match("(.+):(.+);(.+):(.+);(.+):(.+);(.+):(.+);(.+):(.+);(.+):(.+);(.+):(.+);(.+);(.+);(.+)")

        tbl = {s1, s2, s3, s4, s5, s6, armour, armour_color, skin, fight, walk}
        return tbl
    end
end

function keyLoad(key)
    if key:find("(.+):(.+);(.+):(.+);(.+):(.+);(.+):(.+);(.+):(.+);(.+):(.+);(.+):(.+);(.+);(.+);(.+)") then
        s1, c1, s2, c2, s3, c3, s4, c4, s5, c5, s6, c6, armour, armour_color, skin, fight, walk =
            key:match("(.+):(.+);(.+):(.+);(.+):(.+);(.+):(.+);(.+):(.+);(.+):(.+);(.+):(.+);(.+);(.+);(.+)")

        if s1 ~= nil then
            selected_slot[1] = tonumber(s1)
        else
            selected_slot[1] = 1
        end
        if s2 ~= nil then
            selected_slot[2] = tonumber(s2)
        else
            selected_slot[2] = 1
        end
        if s3 ~= nil then
            selected_slot[3] = tonumber(s3)
        else
            selected_slot[3] = 1
        end
        if s4 ~= nil then
            selected_slot[4] = tonumber(s4)
        else
            selected_slot[4] = 1
        end
        if s5 ~= nil then
            selected_slot[5] = tonumber(s5)
        else
            selected_slot[5] = 1
        end
        if s6 ~= nil then
            selected_slot[6] = tonumber(s6)
        else
            selected_slot[6] = 1
        end

        if c1 ~= nil then
            selected_color[1] = tonumber(c1)
        else
            selected_color[1] = 1
        end
        if c2 ~= nil then
            selected_color[2] = tonumber(c2)
        else
            selected_color[2] = 1
        end
        if c3 ~= nil then
            selected_color[3] = tonumber(c3)
        else
            selected_color[3] = 1
        end
        if c4 ~= nil then
            selected_color[4] = tonumber(c4)
        else
            selected_color[4] = 1
        end
        if c5 ~= nil then
            selected_color[5] = tonumber(c5)
        else
            selected_color[5] = 1
        end
        if c6 ~= nil then
            selected_color[6] = tonumber(c6)
        else
            selected_color[6] = 1
        end

        if armour ~= nil then
            armour_selected.v = tonumber(armour)
        else
            armour_selected.v = 0
        end
        if armour_color ~= nil then
            selected_color_armour.v = tonumber(armour_color)
        else
            selected_color_armour.v = 1
        end

        skinid.v = tonumber(skin)
        fightstyle_selected.v = tonumber(fight)
        walkstyle_selected.v = tonumber(walk)

        for i = 1, 6 do
            curSelected = selected_slot[i]
            slot_color_tbl = selected_color[i]
            slotApply(i - 1, items_data[i][curSelected], color_list_data[slot_color_tbl])
        end

        if armour_selected.v ~= 0 then
            local color_index = math.max(1, math.min(selected_color_armour.v, #armour_color_list_data))
            slotApply(7, armour_items_data[armour_selected.v], armour_color_list_data[color_index])
        else
            clear(7)
        end

        apply()
        return true
    else
        return false
    end
end

function sampev.onSetPlayerPos(pos)
    if changeskin.v then
        if skinid.v then
            _, id = sampGetPlayerIdByCharHandle(PLAYER_PED)
            applyPlayerSkin(id, skinid.v)
        end
    end
    if walkstyle_enabled.v then
        applyWalkStyle(walkstyle_selected.v)
    end
end

function sampev.onSetPlayerSkin(playerId, skinId)
    if playerId == select(2, sampGetPlayerIdByCharHandle(PLAYER_PED)) then
        if changeskin.v then
            return false
        end
    end
end

function sampev.onSetPlayerAttachedObject(playerId, index, create, object)
    if enabled.v then
        if playerId == select(2, sampGetPlayerIdByCharHandle(PLAYER_PED)) then
            if index >= 0 and index <= 7 then
                return false
            end
            if object.modelId == 19142 then
                return false
            end
        end

        if playerId == logger_playerId.v then
            log_data =
                "{u8'name', " ..
                object.modelId ..
                    ", " ..
                        object.bone ..
                            ", " ..
                                object.offset.x ..
                                    ", " ..
                                        object.offset.y ..
                                            ", " ..
                                                object.offset.z ..
                                                    ", " ..
                                                        object.rotation.x ..
                                                            ", " ..
                                                                object.rotation.y ..
                                                                    ", " ..
                                                                        object.rotation.z ..
                                                                            ", " ..
                                                                                object.scale.x ..
                                                                                    ", " ..
                                                                                        object.scale.y ..
                                                                                            ", " ..
                                                                                                object.scale.z ..
                                                                                                    "}, --COL1: " ..
                                                                                                        object.color1 ..
                                                                                                            ", COL2: " ..
                                                                                                                object.color2
            if index == 0 then
                logger_slot0.v = log_data
            end
            if index == 1 then
                logger_slot1.v = log_data
            end
            if index == 2 then
                logger_slot2.v = log_data
            end
            if index == 3 then
                logger_slot3.v = log_data
            end
            if index == 4 then
                logger_slot4.v = log_data
            end
            if index == 5 then
                logger_slot5.v = log_data
            end
        end
    end
end

function apply()
    if items_data[1] ~= nil then
        for i = 1, 6 do
            curSelected = selected_slot[i]
            slot_color_tbl = selected_color[i]
            slotApply(i - 1, items_data[i][curSelected], color_list_data[slot_color_tbl])
        end

        applyFightStyle()

        if glow.v then
            slotApply(6, glowEffect_data, false)
        else
            clear(6)
        end
        if armour_selected.v ~= 0 then
            local color_index = math.max(1, math.min(selected_color_armour.v, #armour_color_list_data))
            slotApply(7, armour_items_data[armour_selected.v], armour_color_list_data[color_index])
        else
            clear(7)
        end

        if changeskin.v and getCharModel(PLAYER_PED) ~= skinid.v then
            applyPlayerSkin(select(2, sampGetPlayerIdByCharHandle(PLAYER_PED)), skinid.v)
        end
    end
end

function slotApply(indexNumber, itemData, colorData)
    if itemData ~= nil then
        if itemData[2] ~= false then
            local bs = raknetNewBitStream()
            raknetBitStreamWriteInt16(bs, select(2, sampGetPlayerIdByCharHandle(PLAYER_PED)))
            raknetBitStreamWriteInt32(bs, indexNumber)
            raknetBitStreamWriteBool(bs, true)
            raknetBitStreamWriteInt32(bs, itemData[2])
            raknetBitStreamWriteInt32(bs, itemData[3])
            raknetBitStreamWriteFloat(bs, itemData[4])
            raknetBitStreamWriteFloat(bs, itemData[5])
            raknetBitStreamWriteFloat(bs, itemData[6])
            raknetBitStreamWriteFloat(bs, itemData[7])
            raknetBitStreamWriteFloat(bs, itemData[8])
            raknetBitStreamWriteFloat(bs, itemData[9])
            raknetBitStreamWriteFloat(bs, itemData[10])
            raknetBitStreamWriteFloat(bs, itemData[11])
            raknetBitStreamWriteFloat(bs, itemData[12])
            local color1 = -1
            local color2 = -1

            if colorData ~= nil then
                if itemData[13] ~= false then
                    color1 = itemData[13]
                else
                    color1 = colorData[2] or -1
                end

                if itemData[14] ~= false then
                    color2 = itemData[14]
                else
                    color2 = colorData[2] or -1
                end
            end

            raknetBitStreamWriteInt32(bs, color1)
            raknetBitStreamWriteInt32(bs, color2)

            raknetEmulRpcReceiveBitStream(113, bs)
            raknetDeleteBitStream(bs)
        else
            local bs = raknetNewBitStream()
            raknetBitStreamWriteInt16(bs, select(2, sampGetPlayerIdByCharHandle(PLAYER_PED)))
            raknetBitStreamWriteInt32(bs, indexNumber)
            raknetBitStreamWriteBool(bs, false)
            raknetEmulRpcReceiveBitStream(113, bs)
            raknetDeleteBitStream(bs)
        end
    else
        print(m_tag .. "error in slot " .. indexNumber)
    end
end

function applyPlayerSkin(id, skin)
    if getCharModel(PLAYER_PED) ~= id then
        local BS = raknetNewBitStream()
        raknetBitStreamWriteInt32(BS, id)
        raknetBitStreamWriteInt32(BS, skin)
        raknetEmulRpcReceiveBitStream(153, BS)
        raknetDeleteBitStream(BS)
    end
end

function applyFightStyle()
    bs = raknetNewBitStream()
    raknetBitStreamWriteInt16(bs, select(2, sampGetPlayerIdByCharHandle(PLAYER_PED)))
    raknetBitStreamWriteInt8(bs, fightstyle_data[fightstyle_selected.v + 1][2])
    raknetEmulRpcReceiveBitStream(89, bs)
    raknetDeleteBitStream(bs)
end

function applyWalkStyle(id)
    setAnimGroupForChar(playerPed, walkstyle_data[id + 1])
end

function clear(indexNumber)
    local bs = raknetNewBitStream()
    raknetBitStreamWriteInt16(bs, select(2, sampGetPlayerIdByCharHandle(PLAYER_PED)))
    raknetBitStreamWriteInt32(bs, indexNumber)
    raknetBitStreamWriteBool(bs, false)
    raknetEmulRpcReceiveBitStream(113, bs)
    raknetDeleteBitStream(bs)
end

function BH_theme()
    imgui.SwitchContext()
    local style = imgui.GetStyle()
    local colors = style.Colors
    local clr = imgui.Col
    local ImVec4 = imgui.ImVec4
    local ImVec2 = imgui.ImVec2

    style.WindowPadding = ImVec2(10, 8)
    style.WindowRounding = 8.0
    style.ChildWindowRounding = 8.0
    style.FramePadding = ImVec2(8, 4)
    style.FrameRounding = 6.0
    style.ItemSpacing = ImVec2(10, 8)
    style.ItemInnerSpacing = ImVec2(4, 4)
    style.TouchExtraPadding = ImVec2(0, 0)
    style.IndentSpacing = 10.0
    style.ScrollbarSize = 16.0
    style.ScrollbarRounding = 8.0
    style.GrabMinSize = 25.0
    style.GrabRounding = 4.0
    style.WindowTitleAlign = ImVec2(0.5, 0.5)

    colors[clr.Text] = ImVec4(1.00, 1.00, 1.00, 1.00)
    colors[clr.TextDisabled] = ImVec4(0.50, 0.50, 0.50, 1.00)
    colors[clr.WindowBg] = ImVec4(0.12, 0.12, 0.14, 0.95)
    colors[clr.ChildWindowBg] = ImVec4(0.15, 0.15, 0.17, 1.00)
    colors[clr.PopupBg] = ImVec4(0.10, 0.10, 0.12, 0.95)
    colors[clr.Border] = ImVec4(0.35, 0.35, 0.35, 0.50)
    colors[clr.BorderShadow] = ImVec4(0.00, 0.00, 0.00, 0.00)
    colors[clr.FrameBg] = ImVec4(0.20, 0.20, 0.22, 1.00)
    colors[clr.FrameBgHovered] = ImVec4(0.25, 0.25, 0.27, 1.00)
    colors[clr.FrameBgActive] = ImVec4(0.30, 0.30, 0.32, 1.00)
    colors[clr.TitleBg] = ImVec4(0.15, 0.15, 0.17, 1.00)
    colors[clr.TitleBgActive] = ImVec4(0.20, 0.20, 0.22, 1.00)
    colors[clr.TitleBgCollapsed] = ImVec4(0.15, 0.15, 0.17, 0.75)
    colors[clr.MenuBarBg] = ImVec4(0.15, 0.15, 0.17, 1.00)
    colors[clr.ScrollbarBg] = ImVec4(0.15, 0.15, 0.17, 0.60)
    colors[clr.ScrollbarGrab] = ImVec4(0.50, 0.50, 0.50, 1.00)
    colors[clr.ScrollbarGrabHovered] = ImVec4(0.60, 0.60, 0.60, 1.00)
    colors[clr.ScrollbarGrabActive] = ImVec4(0.70, 0.70, 0.70, 1.00)
    colors[clr.ComboBg] = ImVec4(0.15, 0.15, 0.17, 0.99)
    colors[clr.CheckMark] = ImVec4(1.00, 1.00, 1.00, 1.00)
    colors[clr.SliderGrab] = ImVec4(0.70, 0.70, 0.70, 1.00)
    colors[clr.SliderGrabActive] = ImVec4(0.80, 0.80, 0.80, 1.00)
    colors[clr.Button] = ImVec4(0.30, 0.30, 0.32, 1.00)
    colors[clr.ButtonHovered] = ImVec4(0.40, 0.40, 0.42, 1.00)
    colors[clr.ButtonActive] = ImVec4(0.50, 0.50, 0.52, 1.00)
    colors[clr.Header] = ImVec4(0.25, 0.25, 0.27, 1.00)
    colors[clr.HeaderHovered] = ImVec4(0.35, 0.35, 0.37, 1.00)
    colors[clr.HeaderActive] = ImVec4(0.45, 0.45, 0.47, 1.00)
    colors[clr.Separator] = ImVec4(0.40, 0.40, 0.40, 0.50)
    colors[clr.SeparatorHovered] = ImVec4(0.50, 0.50, 0.50, 0.50)
    colors[clr.SeparatorActive] = ImVec4(0.60, 0.60, 0.60, 0.50)
    colors[clr.ResizeGrip] = ImVec4(0.50, 0.50, 0.50, 0.50)
    colors[clr.ResizeGripHovered] = ImVec4(0.60, 0.60, 0.60, 0.75)
    colors[clr.ResizeGripActive] = ImVec4(0.70, 0.70, 0.70, 1.00)
    colors[clr.CloseButton] = ImVec4(0.60, 0.60, 0.60, 0.50)
    colors[clr.CloseButtonHovered] = ImVec4(0.70, 0.70, 0.70, 0.60)
    colors[clr.CloseButtonActive] = ImVec4(0.80, 0.80, 0.80, 0.70)
    colors[clr.PlotLines] = ImVec4(0.80, 0.80, 0.80, 1.00)
    colors[clr.PlotLinesHovered] = ImVec4(0.90, 0.90, 0.90, 1.00)
    colors[clr.PlotHistogram] = ImVec4(0.80, 0.80, 0.80, 1.00)
    colors[clr.PlotHistogramHovered] = ImVec4(0.90, 0.90, 0.90, 1.00)
    colors[clr.TextSelectedBg] = ImVec4(1.00, 1.00, 1.00, 0.50)
    colors[clr.ModalWindowDarkening] = ImVec4(0.10, 0.10, 0.12, 0.76)
end
BH_theme()

function save()
    ini.other.debugMode = DEBUG.v
    ini.presets.p1, ini.presets.p2, ini.presets.p3, ini.presets.p4, ini.presets.p5 = savedPresets[1], savedPresets[2], savedPresets[3], savedPresets[4], savedPresets[5]
    ini.slots.enabled = enabled.v
    savedcolorstext = ""
    ini.slots.s1, ini.slots.s2, ini.slots.s3, ini.slots.s4, ini.slots.s5, ini.slots.s6, ini.slots.s7 =
        selected_slot[1],
        selected_slot[2],
        selected_slot[3],
        selected_slot[4],
        selected_slot[5],
        selected_slot[6],
        selected_slot[7]
    ini.colors.s1, ini.colors.s2, ini.colors.s3, ini.colors.s4, ini.colors.s5, ini.colors.s6, ini.colors.s7 =
        selected_color[1],
        selected_color[2],
        selected_color[3],
        selected_color[4],
        selected_color[5],
        selected_color[6],
        selected_color[7]
    ini.colors.armour = math.max(1, math.min(selected_color_armour.v, #armour_color_list_data))
    for i = 1, 7 do
        savedcolorstext = savedcolorstext .. "slot: " .. i .. ": " .. selected_color[i] .. "\n"
    end
    print("colors saved: " .. savedcolorstext)
    ini.other.walkstyle = walkstyle_selected.v
    ini.other.walkstyle_enabled = walkstyle_enabled.v
    ini.other.fightstyle = fightstyle_selected.v
    ini.slots.armour = armour_selected.v

    ini.skin.enabled = changeskin.v
    ini.skin.skinid = skinid.v

    ini.slots.glow = glow.v

    inicfg.save(ini, directIni)
end

function imgui.CustomMenu(labels, selected, size, speed, centering)
    local bool = false
    speed = speed and speed or 0.2
    local radius = size.y * 0.50
    local draw_list = imgui.GetWindowDrawList()
    if LastActiveTime == nil then
        LastActiveTime = {}
    end
    if LastActive == nil then
        LastActive = {}
    end
    local function ImSaturate(f)
        return f < 0.0 and 0.0 or (f > 1.0 and 1.0 or f)
    end
    for i, v in ipairs(labels) do
        local c = imgui.GetCursorPos()
        local p = imgui.GetCursorScreenPos()
        if imgui.InvisibleButton(v .. "##" .. i, size) then
            selected.v = i
            LastActiveTime[v] = os.clock()
            LastActive[v] = true
            bool = true
        end
        imgui.SetCursorPos(c)
        local t = selected.v == i and 1.0 or 0.0
        if LastActive[v] then
            local time = os.clock() - LastActiveTime[v]
            if time <= 0.3 then
                local t_anim = ImSaturate(time / speed)
                t = selected.v == i and t_anim or 1.0 - t_anim
            else
                LastActive[v] = false
            end
        end
        local col_bg =
            imgui.GetColorU32(
            selected.v == i and imgui.GetStyle().Colors[imgui.Col.ButtonActive] or imgui.ImVec4(0, 0, 0, 0)
        )
        local col_box =
            imgui.GetColorU32(selected.v == i and imgui.GetStyle().Colors[imgui.Col.Button] or imgui.ImVec4(0, 0, 0, 0))
        local col_hovered = imgui.GetStyle().Colors[imgui.Col.ButtonHovered]
        local col_hovered =
            imgui.GetColorU32(
            imgui.ImVec4(col_hovered.x, col_hovered.y, col_hovered.z, (imgui.IsItemHovered() and 0.2 or 0))
        )
        draw_list:AddRectFilled(
            imgui.ImVec2(p.x - size.x / 6, p.y),
            imgui.ImVec2(p.x + (radius * 0.65) + t * size.x, p.y + size.y),
            col_bg,
            10.0
        )
        draw_list:AddRectFilled(
            imgui.ImVec2(p.x - size.x / 6, p.y),
            imgui.ImVec2(p.x + (radius * 0.65) + size.x, p.y + size.y),
            col_hovered,
            10.0
        )
        draw_list:AddRectFilled(imgui.ImVec2(p.x, p.y), imgui.ImVec2(p.x + 5, p.y + size.y), col_box)
        imgui.SetCursorPos(
            imgui.ImVec2(
                c.x + (centering and (size.x - imgui.CalcTextSize(v).x) / 2 or 15),
                c.y + (size.y - imgui.CalcTextSize(v).y) / 2
            )
        )
        imgui.Text(v)
        imgui.SetCursorPos(imgui.ImVec2(c.x, c.y + size.y))
    end
    return bool
end

function onScriptTerminate(s, q)
    if s == thisScript() then
        for i = 0, 7 do
            clear(i)
        end
        if DEBUG.v then
            os.remove(jsonListPath.file)
        end
    end
end

function rollerFix()
    if getCharModel(PLAYER_PED) == 92 or getCharModel(PLAYER_PED) == 99 then
        if isKeyDown(87) or isKeyDown(65) or isKeyDown(83) or isKeyDown(68) then
            setCharAnimSpeed(PLAYER_PED, "skate_idle", 1000)
        end
    end
end

function imgui.Selector(labels, size, selected, pos, speed)
    local rBool = false
    if not speed then
        speed = 10
    end
    if (pos.v < (selected.v * size.y)) then
        pos.v = pos.v + speed
    elseif (pos.v > (selected.v * size.y)) then
        pos.v = pos.v - speed
    end
    imgui.SetCursorPos(imgui.ImVec2(0.00, pos.v))
    local draw_list = imgui.GetWindowDrawList()
    local p = imgui.GetCursorScreenPos()
    local radius = size.y * 0.50
    draw_list:AddRectFilled(
        imgui.ImVec2(p.x - size.x / 2, p.y),
        imgui.ImVec2(p.x + radius + 1 * (size.x - radius * 2.0), p.y + radius * 2),
        imgui.GetColorU32(imgui.GetStyle().Colors[imgui.Col.ButtonActive])
    )
    draw_list:AddRectFilled(
        imgui.ImVec2(p.x - size.x / 2, p.y),
        imgui.ImVec2(p.x + 5, p.y + size.y),
        imgui.GetColorU32(imgui.GetStyle().Colors[imgui.Col.Button]),
        0
    )
    draw_list:AddCircleFilled(
        imgui.ImVec2(p.x + radius + 1 * (size.x - radius * 2.0), p.y + radius),
        radius,
        imgui.GetColorU32(imgui.GetColorU32(imgui.GetStyle().Colors[imgui.Col.ButtonActive])),
        radius / 10 * 12
    )
    for i = 1, #labels do
        imgui.SetCursorPos(imgui.ImVec2(0, (i * size.y)))
        local p = imgui.GetCursorScreenPos()
        if imgui.InvisibleButton(labels[i], size) then
            selected.v = i
            rBool = true
        end
        if imgui.IsItemHovered() then
            draw_list:AddRectFilled(
                imgui.ImVec2(p.x - size.x / 2, p.y),
                imgui.ImVec2(p.x + size.x, p.y + size.y),
                imgui.GetColorU32(imgui.ImVec4(0.58, 0.34, 0.46, 0.20)),
                radius / 10 * 12
            )
        end
        imgui.SetCursorPos(imgui.ImVec2(20, (i * size.y + (size.y - imgui.CalcTextSize(labels[i]).y) / 2)))
        imgui.Text(labels[i])
    end
    return rBool
end

function imgui.CenterTextColoredRGB(text)
    local width = imgui.GetWindowWidth()
    local style = imgui.GetStyle()
    local colors = style.Colors
    local ImVec4 = imgui.ImVec4

    local explode_argb = function(argb)
        local a = bit.band(bit.rshift(argb, 24), 0xFF)
        local r = bit.band(bit.rshift(argb, 16), 0xFF)
        local g = bit.band(bit.rshift(argb, 8), 0xFF)
        local b = bit.band(argb, 0xFF)
        return a, r, g, b
    end

    local getcolor = function(color)
        if color:sub(1, 6):upper() == "SSSSSS" then
            local r, g, b = colors[1].x, colors[1].y, colors[1].z
            local a = tonumber(color:sub(7, 8), 16) or colors[1].w * 255
            return ImVec4(r, g, b, a / 255)
        end
        local color = type(color) == "string" and tonumber(color, 16) or color
        if type(color) ~= "number" then
            return
        end
        local r, g, b, a = explode_argb(color)
        return imgui.ImColor(r, g, b, a):GetVec4()
    end

    local render_text = function(text_)
        for w in text_:gmatch("[^\r\n]+") do
            local textsize = w:gsub("{.-}", "")
            local text_width = imgui.CalcTextSize(u8(textsize))
            imgui.SetCursorPosX(width / 2 - text_width.x / 2)
            local text, colors_, m = {}, {}, 1
            w = w:gsub("{(......)}", "{%1FF}")
            while w:find("{........}") do
                local n, k = w:find("{........}")
                local color = getcolor(w:sub(n + 1, k - 1))
                if color then
                    text[#text], text[#text + 1] = w:sub(m, n - 1), w:sub(k + 1, #w)
                    colors_[#colors_ + 1] = color
                    m = n
                end
                w = w:sub(1, n - 1) .. w:sub(k + 1, #w)
            end
            if text[0] then
                for i = 0, #text do
                    imgui.TextColored(colors_[i] or colors[1], u8(text[i]))
                    imgui.SameLine(nil, 0)
                end
                imgui.NewLine()
            else
                imgui.Text(u8(w))
            end
        end
    end
    render_text(text)
end

function imgui.TextQuestion(text)
    imgui.SameLine()
    imgui.TextDisabled("?")
    if imgui.IsItemHovered() then
        imgui.BeginTooltip()
        imgui.PushTextWrapPos(450)
        imgui.TextUnformatted(text)
        imgui.PopTextWrapPos()
        imgui.EndTooltip()
    end

end
